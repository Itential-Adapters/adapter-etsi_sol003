openapi: 3.0.0
info:
  title: SOL003 - VNF Fault Management interface
  description: >
    SOL003 - VNF Fault Management interface


    IMPORTANT: Please note that this file might be not aligned to the current

    version of the ETSI Group Specification it refers to. In case of

    discrepancies the published ETSI Group Specification takes precedence.


    Please report bugs to https://forge.etsi.org/rep/nfv/SOL002-SOL003/issues
  contact:
    name: NFV-SOL WG
  version: '1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1'
servers:
- url: http://127.0.0.1/vnffm/v1
  variables: {}
- url: https://127.0.0.1/vnffm/v1
  variables: {}
paths:
  /api_versions:
    get:
      summary: Retrieve API version information
      description: >
        The GET method reads API version information. This method shall follow the provisions specified in table 4.6.3.3.3.2-1 for request and response data structures, and response codes. URI query parameters are not supported.
      operationId: RetrieveAPIversioninformation
      parameters:
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: >-
            200 OK

            API version information was read successfully. The response body shall contain 4.4 API version information, as defined in clause 4.4.1.13.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersionsResponse'
                - description: >
                    This type represents API version information.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '413':
          description: >-
            413 PAYLOAD TOO LARGE

            If the payload body of a request is larger than the amount of data the API producer is willing or able to process, it shall respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for closing the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions413Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '414':
          description: >-
            414 URI TOO LONG

            If the request URI of a request is longer than the API producer is willing or able to process, it shall respond with this response code. This condition can e.g. be caused by passing long queries in the request URI of a GET request. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions414Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '416':
          description: 416 Range Not Satisfiable
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions416Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '429':
          description: >-
            429 TOO MANY REQUESTS

            If the API consumer has sent too many requests in a defined period of time and the API producer is able to detect that condition ("rate limiting"), the API producer shall respond with this response code, following the provisions in IETF RFC 6585 [17] for the use of the "Retry-After" HTTP header. The "ProblemDetails" structure shall be provided and shall include in the "detail" attribute more information about the source of the problem.

            The period of time and allowed number of requests are configured within the API producer by means outside the scope of the present document.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions429Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiVersions504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
  /alarms:
    get:
      summary: Alarms_GET
      description: >
        Get Alarm List.

        The API consumer can use this method to retrieve information about the alarm list.

        This method shall follow the provisions specified in the tables 7.4.2.3.2-1 and 7.4.2.3.2-2

        for URI query parameters, request and response data structures, and response codes.
      operationId: Alarms_GET
      parameters:
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Content-Type
        in: header
        description: 'The MIME type of the body of the request. Reference: IETF RFC 7231'
        required: true
        style: simple
        schema:
          type: string
      - name: filter
        in: query
        description: Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.
        style: form
        explode: true
        schema:
          type: string
      - name: nextpage_opaque_marker
        in: query
        description: Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: >-
            200 OK


            Shall be returned when information about zero or more alarms has been queried successfully.

            The response body shall contain in an array the representations of zero or more alarms as

            defined in clause 7.5.2.4.

            If the "filter" URI parameter was supplied in the request, the data in the response body

            shall have been transformed according to the rules specified in clause 5.2.2 of ETSI GS NFV-SOL 013.

            If the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013

            for this resource, inclusion of the Link HTTP header in this response shall follow the provisions

            in clause 5.4.2.3 of ETSI GS NFV-SOL 013.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            Link:
              description: >
                Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms.Get.200'
                - description: >
                    The alarm data type encapsulates information about an alarm.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
  /alarms/{alarmId}:
    get:
      summary: AlarmsByAlarmId_GET
      description: >
        The API consumer can use this method to read an individual alarm.

        This method shall follow the provisions specified in the tables 7.4.3.3.2-1 and 7.4.3.3.2-2

        for URI query parameters, request and response data structures, and response codes.
      operationId: AlarmsByAlarmId_GET
      parameters:
      - name: alarmId
        in: path
        description: "Identifier of the alarm.\nThis identifier can be retrieved from the \"id\" attribute of the \"alarm\" attribute in the AlarmNotification or\nAlarmClearedNotification. It can also be retrieved from the \"id\" attribute of the applicable array element in \nthe payload body of the response to a GET request to the \"Alarms\" resource."
        required: true
        style: simple
        schema:
          type: string
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Content-Type
        in: header
        description: 'The MIME type of the body of the request. Reference: IETF RFC 7231'
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: >-
            200 OK


            Shall be returned when information about an individual alarm has been read successfully.

            The response body shall contain a representation of the individual alarm
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualAlarm.Get.200'
                - description: >
                    The alarm data type encapsulates information about an alarm.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
    patch:
      summary: AlarmsByAlarmId_PATCH
      description: >
        Acknowledge Alarm.

        This method modifies an "Individual alarm" resource.

        This method shall follow the provisions specified in the tables 7.4.3.3.4-1 and 7.4.3.3.4-2

        for URI query parameters, request and response data structures, and response codes.
      operationId: AlarmsByAlarmId_PATCH
      parameters:
      - name: alarmId
        in: path
        description: "Identifier of the alarm.\nThis identifier can be retrieved from the \"id\" attribute of the \"alarm\" attribute in the AlarmNotification or\nAlarmClearedNotification. It can also be retrieved from the \"id\" attribute of the applicable array element in \nthe payload body of the response to a GET request to the \"Alarms\" resource."
        required: true
        style: simple
        schema:
          type: string
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: The VNF creation parameters
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IndividualAlarmRequest'
              - description: The VNF creation parameters
        required: true
      responses:
        '200':
          description: >-
            200 OK


            Shall be returned when the request has been accepted and completed.

            The response body shall contain attribute modifications for an "Individual alarm"

            resource (see clause 7.5.2.4).
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualAlarm.Patch.200'
                - description: >
                    This type represents attribute modifications for an "Individual alarm" resource, i.e. modifications to a resource representation based on the "Alarm" data type. The attributes of "Alarm" that can be modified are included in the "AlarmModifications" data type.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '409':
          description: 409 CONFLICT
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms409Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '412':
          description: >-
            412 PRECONDITION FAILED

            Error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the "detail" attribute should convey more information about the error.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms412Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alarms504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
  /subscriptions:
    post:
      summary: Subscriptions_POST
      description: >
        Subscribe.

        The POST method creates a new subscription.

        This method shall follow the provisions specified in the tables 7.4.4.3.1-1 and 7.4.4.3.1-2

        for URI query parameters, request and response data structures, and response codes.

        As the result of successfully executing this method, a new "Individual subscription" resource

        as defined in clause 7.4.5 shall have been created. This method shall not trigger any notification.

        Creation of two "Individual subscription" resources with the same callback URI and the same filter

        can result in performance degradation and will provide duplicates of notifications to the NFVO,

        and might make sense only in very rare use cases. Consequently, the VNFM may either allow creating

        a new "Individual subscription" resource if another "Individual subscription" resource with the

        same filter and callback URI already exists (in which case it shall return the "201 Created" response code),

        or may decide to not create a duplicate "Individual subscription" resource (in which case it shall return

        a "303 See Other" response code referencing the existing "Individual subscription" resource with the

        same filter and callback URI).
      operationId: Subscriptions_POST
      parameters:
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: The VNF creation parameters
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FmSubscriptionRequest'
              - description: The VNF creation parameters
        required: true
      responses:
        '201':
          description: >-
            201 CREATED


            Shall be returned when the subscription has been created successfully.

            The response body shall contain a representation of the created "Individual subscription" resource.

            The HTTP response shall include a "Location:"" HTTP header that points to the created

            "Individual subscription" resource.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
            Location:
              description: >
                The resource URI of the created subscription resource.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      The resource URI of the created subscription resource.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions.Post.200'
                - description: >
                    This type represents a subscription related to notifications about VNF faults.
        '303':
          description: 303 See Other
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content: {}
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
    get:
      summary: Subscriptions_GET
      description: >
        Query Subscription Information



        The API consumer can use this method to retrieve the list of active

        subscriptions for VNF alarms subscribed by the API consumer. It can be used

        e.g. for resynchronization after error situations.
      operationId: Subscriptions_GET
      parameters:
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Content-Type
        in: header
        description: 'The MIME type of the body of the request. Reference: IETF RFC 7231'
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      - name: filter
        in: query
        description: Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.
        style: form
        explode: true
        schema:
          type: string
      - name: nextpage_opaque_marker
        in: query
        description: Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: >-
            200 OK


            Shall be returned when the list of subscriptions has been queried successfully.

            The response body shall contain in an array the representations of all active subscriptions

            of the functional block that invokes the method, i.e. zero or more representations of

            FM subscriptions as defined in clause 7.5.2.3.

            If the "filter" URI parameter was supplied in the request, the data in the response body shall

            have been transformed according to the rules specified in clause 5.2.2 of ETSI GS NFV-SOL 013.

            If the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013

            for this resource, inclusion of the Link HTTP header in this response shall follow the provisions

            in clause 5.4.2.3 of ETSI GS NFV-SOL 013.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
            Link:
              description: >
                Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions.Get.200'
                - description: >
                    This type represents a subscription related to notifications about VNF faults.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
  /subscriptions/{subscriptionId}:
    get:
      summary: SubscriptionsBySubscriptionId_GET
      description: >
        Query Subscription Information.

        The API consumer can use this method for reading an individual subscription for VNF alarms

        subscribed by the API consumer.

        This method shall follow the provisions specified in the tables 7.4.5.3.2-1 and 7.4.5.3.2-2

        for URI query parameters, request and response data structures, and response codes.
      operationId: SubscriptionsBySubscriptionId_GET
      parameters:
      - name: subscriptionId
        in: path
        description: >-
          Identifier of this subscription.

          This identifier can be retrieved from the resource referenced by the

          "Location" HTTP header in the response to a POST request creating a

          new "Individual subscription" resource. It can also be retrieved from the "id"

          attribute in the payload body of that response.
        required: true
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      - name: Accept
        in: header
        description: 'Content-Types that are acceptable for the response. Reference: IETF RFC 7231.'
        required: true
        style: simple
        schema:
          type: string
      - name: Content-Type
        in: header
        description: 'The MIME type of the body of the request. Reference: IETF RFC 7231'
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: >-
            200 OK


            The operation has completed successfully.

            The response body shall contain a representation of the

            subscription resource.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualSubscription.Get.200'
                - description: >
                    This type represents a subscription related to notifications about VNF faults.
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
    delete:
      summary: SubscriptionsBySubscriptionId_DELETE
      description: >
        Terminate Subscription.

        This method terminates an individual subscription.

        This method shall follow the provisions specified in the tables 7.4.5.3.5-1 and 7.4.5.3.5-2

        for URI query parameters, request and response data structures, and response codes.

        As the result of successfully executing this method, the "Individual subscription" resource

        shall not exist any longer. This means that no notifications for that subscription shall be

        sent to the formerly-subscribed API consumer.

          NOTE: Due to race conditions, some notifications might still be received by the formerly-subscribed
                API consumer for a certain time period after the deletion.
      operationId: SubscriptionsBySubscriptionId_DELETE
      parameters:
      - name: subscriptionId
        in: path
        description: >-
          Identifier of this subscription.

          This identifier can be retrieved from the resource referenced by the

          "Location" HTTP header in the response to a POST request creating a

          new "Individual subscription" resource. It can also be retrieved from the "id"

          attribute in the payload body of that response.
        required: true
        style: simple
        schema:
          type: string
      - name: Version
        in: header
        description: Version of the API requested to use when responding to this request.
        required: true
        style: simple
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'The authorization token for the request. Reference: IETF RFC 7235.'
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: >-
            204 NO CONTENT


            Shall be returned when the "Individual subscription" resource has been deleted successfully.

            The response body shall be empty.
          headers:
            Version:
              description: The used API version.
              content:
                text/plain:
                  schema:
                    type: string
                    description: The used API version.
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the

                      corresponding HTTP request has provided an invalid authorization token.
          content: {}
        '400':
          description: >-
            400 BAD REQUEST

            400 code can be returned in the following specified cases, the specific cause has to be proper specified in the "ProblemDetails" structure to be returned.

            If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.

            If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.

            The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions400Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '401':
          description: >-
            401 UNAUTHORIZED

            If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions401Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '403':
          description: >-
            403 FORBIDDEN

            If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided. It should include in the "detail" attribute information about the source of the problem, and may indicate how to solve it.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions403Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '404':
          description: >-
            404 NOT FOUND

            If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The "ProblemDetails" structure may be provided, including in the "detail" attribute information about the source of the problem, e.g. a wrong resource URI variable.

            This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions404Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '405':
          description: >-
            405 METHOD NOT ALLOWED

            If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions405Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '406':
          description: >-
            406 NOT ACCEPTABLE

            If the "Accept" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions406Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '422':
          description: >-
            422 UNPROCESSABLE ENTITY

            If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and should include in the "detail" attribute more information about the source of the problem.

            This error response code is only applicable for methods that have a request body.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions422Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '500':
          description: >-
            500 INTERNAL SERVER ERROR

            If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code ("catch all error"), the API producer shall respond with this response code. The "ProblemDetails" structure shall be provided, and shall include in the "detail" attribute more information about the source of the problem.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions500Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '503':
          description: >-
            503 SERVICE UNAVAILABLE

            If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the "Retry-After" HTTP header and for the alternative to refuse the connection. The "ProblemDetails" structure may be omitted.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions503Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
        '504':
          description: >-
            504 GATEWAY TIMEOUT

            If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.
          headers:
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.
            Version:
              description: >
                Version of the API used in the response.
              content:
                text/plain:
                  schema:
                    type: string
                    description: >
                      Version of the API used in the response.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscriptions504Error1'
                - description: >
                    The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
      deprecated: false
components:
  schemas:
    ApiVersionsResponse:
      title: ApiVersionsResponse
      required:
      - uriPrefix
      - apiVersions
      type: object
      properties:
        uriPrefix:
          type: string
          description: Specifies the URI prefix for the API, in the following form {apiRoot}/{apiName}/{apiMajorVersion}/.
        apiVersions:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersion'
          description: Version(s) supported for the API signaled by the uriPrefix attribute.
      description: This type represents API version information.
    ApiVersion:
      title: ApiVersion
      required:
      - version
      type: object
      properties:
        version:
          type: string
          description: Identifies a supported version. The value of the version attribute shall be a version identifier as specified in clause 9.1 (SOL013).
        isDeprecated:
          type: boolean
          description: >-
            If such information is available, this attribute indicates whether use of the version signaled by the version attribute is deprecated (true) or not (false).

            A deprecated version is still supported by the API producer but is recommended not to be used any longer. When a version is no longer supported, it does not appear in the response body.
        retirementDate:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
    ApiVersions400Error1:
      title: ApiVersions400Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions401Error1:
      title: ApiVersions401Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions403Error1:
      title: ApiVersions403Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions404Error1:
      title: ApiVersions404Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions405Error1:
      title: ApiVersions405Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions406Error1:
      title: ApiVersions406Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions413Error1:
      title: ApiVersions413Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions414Error1:
      title: ApiVersions414Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions416Error1:
      title: ApiVersions416Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions422Error1:
      title: ApiVersions422Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions429Error1:
      title: ApiVersions429Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions500Error1:
      title: ApiVersions500Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions503Error1:
      title: ApiVersions503Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    ApiVersions504Error1:
      title: ApiVersions504Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms.Get.200:
      title: Alarms.Get.200
      required:
      - id
      - managedObjectId
      - alarmRaisedTime
      - ackState
      - perceivedSeverity
      - eventTime
      - eventType
      - probableCause
      - isRootCause
      - _links
      type: object
      properties:
        id:
          type: string
          description: An identifier with the intention of being globally unique.
        managedObjectId:
          type: string
          description: An identifier with the intention of being globally unique.
        rootCauseFaultyResource:
          allOf:
          - $ref: '#/components/schemas/RootCauseFaultyResource'
          - description: This type represents the faulty virtual resources that have a negative impact on a VNF.
        alarmRaisedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmChangedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmClearedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmAcknowledgedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        ackState:
          allOf:
          - $ref: '#/components/schemas/AckState'
          - description: 'Acknowledgement state of the alarm. Permitted values: * UNACKNOWLEDGED * ACKNOWLEDGED.'
        perceivedSeverity:
          allOf:
          - $ref: '#/components/schemas/PerceivedSeverity'
          - description: >-
              Indicates the relative level of urgency for operator attention. * CRITICAL: The Critical severity level indicates that a service
                affecting condition has occurred and an immediate corrective action
                is required. Such a severity can be reported, for example, when a
                managed object becomes totally out of service and its capability needs
                to be restored (ITU-T Recommendation X.733).
              * MAJOR: The Major severity level indicates that a service affecting
                condition has developed and an urgent corrective action is required.
                Such a severity can be reported, for example, when there is a severe
                degradation in the capability of the managed object and its full
                capability needs to be restored (ITU-T Recommendation X.733).
              * MINOR: The Minor severity level indicates the existence of a
                non-service affecting fault condition and that corrective action
                should be taken in order to prevent a more serious (for example,
                service affecting) fault. Such a severity can be reported, for
                example, when the detected alarm condition is not currently degrading
                the capacity of the managed object (ITU-T Recommendation X.733).
              * WARNING: The Warning severity level indicates the detection of a
                potential or impending service affecting fault, before any significant
                effects have been felt. Action should be taken to further diagnose (if
                necessary) and correct the problem in order to prevent it from
                becoming a more serious service affecting fault (ITU-T Recommendation
                X.733).
              * INDETERMINATE: The Indeterminate severity level indicates that the
                severity level cannot be determined (ITU-T Recommendation X.733).
              * CLEARED: The Cleared severity level indicates the clearing of one or
                more previously reported alarms. This alarm clears all alarms for this
                managed object that have the same Alarm type, Probable cause and
                Specific problems (if given) (ITU-T Recommendation X.733).
        eventTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: >-
              The enumeration EventType represents those types of events that trigger an alarm. * COMMUNICATIONS_ALARM: An alarm of this type is associated with the
                procedure and/or process required conveying information from one point
                to another (ITU-T Recommendation X.733).
              * PROCESSING_ERROR_ALARM: An alarm of this type is associated with a
                software or processing fault (ITU-T Recommendation X.733).
              * ENVIRONMENTAL_ALARM: An alarm of this type is associated with a
                condition related to an enclosure in which the equipment resides
                (ITU-T Recommendation X.733).
              * QOS_ALARM: An alarm of this type is associated with degradation in the
                quality of a service (ITU-T Recommendation X.733).
              * EQUIPMENT_ALARM: An alarm of this type is associated with an equipment
                fault (ITU-T Recommendation X.733).
        faultType:
          type: string
          description: Additional information to clarify the type of the fault.
        probableCause:
          type: string
          description: Information about the probable cause of the fault.
        isRootCause:
          type: boolean
          description: Attribute indicating if this fault is the root for other correlated alarms. If true, then the alarms listed in the attribute "correlatedAlarmIds" are caused by this fault.
        correlatedAlarmIds:
          type: array
          items:
            type: string
          description: List of identifiers of other alarms correlated to this fault.
        faultDetails:
          type: array
          items:
            type: string
          description: Provides additional information about the fault.
        _links:
          allOf:
          - $ref: '#/components/schemas/Links'
          - description: Links for this resource.
      description: The alarm data type encapsulates information about an alarm.
    RootCauseFaultyResource:
      title: RootCauseFaultyResource
      required:
      - faultyResource
      - faultyResourceType
      type: object
      properties:
        faultyResource:
          allOf:
          - $ref: '#/components/schemas/FaultyResource'
          - description: This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.
        faultyResourceType:
          allOf:
          - $ref: '#/components/schemas/FaultyResourceType'
          - description: The enumeration FaultyResourceType represents those types of faulty resource.
      description: This type represents the faulty virtual resources that have a negative impact on a VNF.
    FaultyResource:
      title: FaultyResource
      required:
      - resourceId
      type: object
      properties:
        vimConnectionId:
          type: string
          description: An identifier with the intention of being globally unique.
        resourceProviderId:
          type: string
          description: An identifier with the intention of being globally unique.
        resourceId:
          type: string
          description: An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.
        vimLevelResourceType:
          type: string
          description: The value set of the "vimLevelResourceType" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the "type" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).
      description: This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.
    FaultyResourceType:
      title: FaultyResourceType
      enum:
      - COMPUTE
      - STORAGE
      - NETWORK
      type: string
      description: The enumeration FaultyResourceType represents those types of faulty resource.
    AckState:
      title: AckState
      enum:
      - UNACKNOWLEDGED
      - ACKNOWLEDGED
      type: string
      description: 'Acknowledgement state of the alarm. Permitted values: * UNACKNOWLEDGED * ACKNOWLEDGED.'
    PerceivedSeverity:
      title: PerceivedSeverity
      enum:
      - CRITICAL
      - MAJOR
      - MINOR
      - WARNING
      - INDETERMINATE
      - CLEARED
      type: string
      description: >-
        Indicates the relative level of urgency for operator attention. * CRITICAL: The Critical severity level indicates that a service
          affecting condition has occurred and an immediate corrective action
          is required. Such a severity can be reported, for example, when a
          managed object becomes totally out of service and its capability needs
          to be restored (ITU-T Recommendation X.733).
        * MAJOR: The Major severity level indicates that a service affecting
          condition has developed and an urgent corrective action is required.
          Such a severity can be reported, for example, when there is a severe
          degradation in the capability of the managed object and its full
          capability needs to be restored (ITU-T Recommendation X.733).
        * MINOR: The Minor severity level indicates the existence of a
          non-service affecting fault condition and that corrective action
          should be taken in order to prevent a more serious (for example,
          service affecting) fault. Such a severity can be reported, for
          example, when the detected alarm condition is not currently degrading
          the capacity of the managed object (ITU-T Recommendation X.733).
        * WARNING: The Warning severity level indicates the detection of a
          potential or impending service affecting fault, before any significant
          effects have been felt. Action should be taken to further diagnose (if
          necessary) and correct the problem in order to prevent it from
          becoming a more serious service affecting fault (ITU-T Recommendation
          X.733).
        * INDETERMINATE: The Indeterminate severity level indicates that the
          severity level cannot be determined (ITU-T Recommendation X.733).
        * CLEARED: The Cleared severity level indicates the clearing of one or
          more previously reported alarms. This alarm clears all alarms for this
          managed object that have the same Alarm type, Probable cause and
          Specific problems (if given) (ITU-T Recommendation X.733).
    EventType:
      title: EventType
      enum:
      - COMMUNICATIONS_ALARM
      - PROCESSING_ERROR_ALARM
      - ENVIRONMENTAL_ALARM
      - QOS_ALARM
      - EQUIPMENT_ALARM
      type: string
      description: >-
        The enumeration EventType represents those types of events that trigger an alarm. * COMMUNICATIONS_ALARM: An alarm of this type is associated with the
          procedure and/or process required conveying information from one point
          to another (ITU-T Recommendation X.733).
        * PROCESSING_ERROR_ALARM: An alarm of this type is associated with a
          software or processing fault (ITU-T Recommendation X.733).
        * ENVIRONMENTAL_ALARM: An alarm of this type is associated with a
          condition related to an enclosure in which the equipment resides
          (ITU-T Recommendation X.733).
        * QOS_ALARM: An alarm of this type is associated with degradation in the
          quality of a service (ITU-T Recommendation X.733).
        * EQUIPMENT_ALARM: An alarm of this type is associated with an equipment
          fault (ITU-T Recommendation X.733).
    Links:
      title: Links
      required:
      - self
      type: object
      properties:
        self:
          allOf:
          - $ref: '#/components/schemas/Self'
          - description: This type represents a link to a resource using an absolute URI.
        objectInstance:
          allOf:
          - $ref: '#/components/schemas/ObjectInstance'
          - description: This type represents a link to a resource using an absolute URI.
      description: Links for this resource.
    Self:
      title: Self
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: String formatted according to IETF RFC 3986.
      description: This type represents a link to a resource using an absolute URI.
    ObjectInstance:
      title: ObjectInstance
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: String formatted according to IETF RFC 3986.
      description: This type represents a link to a resource using an absolute URI.
    Alarms400Error1:
      title: Alarms400Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms401Error1:
      title: Alarms401Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms403Error1:
      title: Alarms403Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms404Error1:
      title: Alarms404Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms405Error1:
      title: Alarms405Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms406Error1:
      title: Alarms406Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms422Error1:
      title: Alarms422Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms500Error1:
      title: Alarms500Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms503Error1:
      title: Alarms503Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms504Error1:
      title: Alarms504Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    IndividualAlarm.Get.200:
      title: IndividualAlarm.Get.200
      required:
      - id
      - managedObjectId
      - alarmRaisedTime
      - ackState
      - perceivedSeverity
      - eventTime
      - eventType
      - probableCause
      - isRootCause
      - _links
      type: object
      properties:
        id:
          type: string
          description: An identifier with the intention of being globally unique.
        managedObjectId:
          type: string
          description: An identifier with the intention of being globally unique.
        rootCauseFaultyResource:
          allOf:
          - $ref: '#/components/schemas/RootCauseFaultyResource'
          - description: This type represents the faulty virtual resources that have a negative impact on a VNF.
        alarmRaisedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmChangedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmClearedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        alarmAcknowledgedTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        ackState:
          allOf:
          - $ref: '#/components/schemas/AckState'
          - description: 'Acknowledgement state of the alarm. Permitted values: * UNACKNOWLEDGED * ACKNOWLEDGED.'
        perceivedSeverity:
          allOf:
          - $ref: '#/components/schemas/PerceivedSeverity'
          - description: >-
              Indicates the relative level of urgency for operator attention. * CRITICAL: The Critical severity level indicates that a service
                affecting condition has occurred and an immediate corrective action
                is required. Such a severity can be reported, for example, when a
                managed object becomes totally out of service and its capability needs
                to be restored (ITU-T Recommendation X.733).
              * MAJOR: The Major severity level indicates that a service affecting
                condition has developed and an urgent corrective action is required.
                Such a severity can be reported, for example, when there is a severe
                degradation in the capability of the managed object and its full
                capability needs to be restored (ITU-T Recommendation X.733).
              * MINOR: The Minor severity level indicates the existence of a
                non-service affecting fault condition and that corrective action
                should be taken in order to prevent a more serious (for example,
                service affecting) fault. Such a severity can be reported, for
                example, when the detected alarm condition is not currently degrading
                the capacity of the managed object (ITU-T Recommendation X.733).
              * WARNING: The Warning severity level indicates the detection of a
                potential or impending service affecting fault, before any significant
                effects have been felt. Action should be taken to further diagnose (if
                necessary) and correct the problem in order to prevent it from
                becoming a more serious service affecting fault (ITU-T Recommendation
                X.733).
              * INDETERMINATE: The Indeterminate severity level indicates that the
                severity level cannot be determined (ITU-T Recommendation X.733).
              * CLEARED: The Cleared severity level indicates the clearing of one or
                more previously reported alarms. This alarm clears all alarms for this
                managed object that have the same Alarm type, Probable cause and
                Specific problems (if given) (ITU-T Recommendation X.733).
        eventTime:
          type: string
          description: 'Date-time stamp. Representation: String formatted according to IETF RFC 3339.'
          format: date-time
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: >-
              The enumeration EventType represents those types of events that trigger an alarm. * COMMUNICATIONS_ALARM: An alarm of this type is associated with the
                procedure and/or process required conveying information from one point
                to another (ITU-T Recommendation X.733).
              * PROCESSING_ERROR_ALARM: An alarm of this type is associated with a
                software or processing fault (ITU-T Recommendation X.733).
              * ENVIRONMENTAL_ALARM: An alarm of this type is associated with a
                condition related to an enclosure in which the equipment resides
                (ITU-T Recommendation X.733).
              * QOS_ALARM: An alarm of this type is associated with degradation in the
                quality of a service (ITU-T Recommendation X.733).
              * EQUIPMENT_ALARM: An alarm of this type is associated with an equipment
                fault (ITU-T Recommendation X.733).
        faultType:
          type: string
          description: Additional information to clarify the type of the fault.
        probableCause:
          type: string
          description: Information about the probable cause of the fault.
        isRootCause:
          type: boolean
          description: Attribute indicating if this fault is the root for other correlated alarms. If true, then the alarms listed in the attribute "correlatedAlarmIds" are caused by this fault.
        correlatedAlarmIds:
          type: array
          items:
            type: string
          description: List of identifiers of other alarms correlated to this fault.
        faultDetails:
          type: array
          items:
            type: string
          description: Provides additional information about the fault.
        _links:
          allOf:
          - $ref: '#/components/schemas/Links'
          - description: Links for this resource.
      description: The alarm data type encapsulates information about an alarm.
    IndividualAlarmRequest:
      title: IndividualAlarmRequest
      required:
      - ackState
      type: object
      properties:
        ackState:
          allOf:
          - $ref: '#/components/schemas/AckState2'
          - description: 'New value of the "ackState" attribute in "Alarm". Permitted values: * ACKNOWLEDGED * UNACKNOWLEDGED'
      description: This type represents attribute modifications for an "Individual alarm" resource, i.e. modifications to a resource representation based on the "Alarm" data type. The attributes of "Alarm" that can be modified are included in the "AlarmModifications" data type.
    AckState2:
      title: AckState2
      enum:
      - ACKNOWLEDGED
      - UNACKNOWLEDGED
      type: string
      description: 'New value of the "ackState" attribute in "Alarm". Permitted values: * ACKNOWLEDGED * UNACKNOWLEDGED'
    IndividualAlarm.Patch.200:
      title: IndividualAlarm.Patch.200
      required:
      - ackState
      type: object
      properties:
        ackState:
          allOf:
          - $ref: '#/components/schemas/AckState2'
          - description: 'New value of the "ackState" attribute in "Alarm". Permitted values: * ACKNOWLEDGED * UNACKNOWLEDGED'
      description: This type represents attribute modifications for an "Individual alarm" resource, i.e. modifications to a resource representation based on the "Alarm" data type. The attributes of "Alarm" that can be modified are included in the "AlarmModifications" data type.
    Alarms409Error1:
      title: Alarms409Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Alarms412Error1:
      title: Alarms412Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    FmSubscriptionRequest:
      title: FmSubscriptionRequest
      required:
      - callbackUri
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/Filter'
          - description: 'This type represents a subscription filter related to notifications about VNF faults. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical "and" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical "or" between the values of one filter attribute).'
        callbackUri:
          type: string
          description: String formatted according to IETF RFC 3986.
        authentication:
          $ref: '#/components/schemas/Authentication'
      description: This type represents a subscription request related to notifications about VNF faults.
    Filter:
      title: Filter
      type: object
      properties:
        vnfInstanceSubscriptionFilter:
          anyOf:
          - oneOf:
            - $ref: '#/components/schemas/VnfInstanceSubscriptionFilter'
            - $ref: '#/components/schemas/VnfInstanceSubscriptionFilter1'
          - oneOf:
            - $ref: '#/components/schemas/VnfInstanceSubscriptionFilter3'
            - $ref: '#/components/schemas/VnfInstanceSubscriptionFilter31'
          description: This type represents subscription filter criteria to match VNF instances.
        notificationTypes:
          type: array
          items:
            $ref: '#/components/schemas/NotificationType'
          description: 'Match particular notification types. Permitted values: * AlarmNotification * AlarmClearedNotification * AlarmListRebuiltNotification The permitted values of the "notificationTypes" attribute are spelled exactly as the names of the notification types to facilitate automated code generation systems.'
        faultyResourceTypes:
          type: array
          items:
            $ref: '#/components/schemas/FaultyResourceType'
          description: Match VNF alarms with a faulty resource type listed in this attribute.
        perceivedSeverities:
          type: array
          items:
            $ref: '#/components/schemas/PerceivedSeverity'
          description: Match VNF alarms with a perceived severity listed in this attribute.
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
          description: Match VNF alarms with an event type listed in this attribute.
        probableCauses:
          type: array
          items:
            type: string
          description: Match VNF alarms with a probable cause listed in this attribute.
      description: 'This type represents a subscription filter related to notifications about VNF faults. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical "and" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical "or" between the values of one filter attribute).'
    VnfInstanceSubscriptionFilter:
      title: VnfInstanceSubscriptionFilter
      type: object
      properties:
        vnfdIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfProductsFromProviders:
          type: array
          items:
            $ref: '#/components/schemas/VnfProductsFromProvider'
          description: If present, match VNF instances that belong to VNF products from certain providers. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances with an instance identifier listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceNames:
          type: array
          items:
            type: string
          description: If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
    VnfProductsFromProvider:
      title: VnfProductsFromProvider
      required:
      - vnfProvider
      type: object
      properties:
        vnfProvider:
          type: string
          description: Name of the VNF provider to match.
        vnfProducts:
          type: array
          items:
            $ref: '#/components/schemas/VnfProduct'
          description: If present, match VNF instances that belong to VNF products with certain product names, from one particular provider.
    VnfProduct:
      title: VnfProduct
      required:
      - vnfProductName
      type: object
      properties:
        vnfProductName:
          type: string
          description: Name of the VNF product to match.
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
          description: If present, match VNF instances that belong to VNF products with certain versions and a certain product name, from one particular provider.
    Version:
      title: Version
      required:
      - vnfSoftwareVersion
      type: object
      properties:
        vnfSoftwareVersion:
          type: string
          description: A version.
        vnfdVersions:
          type: array
          items:
            type: string
          description: If present, match VNF instances that belong to VNF products with certain VNFD versions, a certain software version and a certain product name, from one particular provider.
    VnfInstanceSubscriptionFilter1:
      title: VnfInstanceSubscriptionFilter1
      required:
      - vnfProductsFromProviders
      type: object
      properties:
        vnfdIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfProductsFromProviders:
          type: array
          items:
            $ref: '#/components/schemas/VnfProductsFromProvider'
          description: If present, match VNF instances that belong to VNF products from certain providers. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances with an instance identifier listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceNames:
          type: array
          items:
            type: string
          description: If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
    VnfInstanceSubscriptionFilter3:
      title: VnfInstanceSubscriptionFilter3
      required:
      - vnfInstanceIds
      type: object
      properties:
        vnfdIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfProductsFromProviders:
          type: array
          items:
            $ref: '#/components/schemas/VnfProductsFromProvider'
          description: If present, match VNF instances that belong to VNF products from certain providers. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances with an instance identifier listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceNames:
          type: array
          items:
            type: string
          description: If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
    VnfInstanceSubscriptionFilter31:
      title: VnfInstanceSubscriptionFilter31
      required:
      - vnfInstanceNames
      type: object
      properties:
        vnfdIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfProductsFromProviders:
          type: array
          items:
            $ref: '#/components/schemas/VnfProductsFromProvider'
          description: If present, match VNF instances that belong to VNF products from certain providers. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances with an instance identifier listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceNames:
          type: array
          items:
            type: string
          description: If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
    VnfInstanceSubscriptionFilter4:
      title: VnfInstanceSubscriptionFilter4
      type: object
      properties:
        vnfdIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfProductsFromProviders:
          type: array
          items:
            $ref: '#/components/schemas/VnfProductsFromProvider'
          description: If present, match VNF instances that belong to VNF products from certain providers. The attributes "vnfdIds" and "vnfProductsFromProviders" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceIds:
          type: array
          items:
            type: string
          description: If present, match VNF instances with an instance identifier listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
        vnfInstanceNames:
          type: array
          items:
            type: string
          description: If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes "vnfInstanceIds" and "vnfInstanceNames" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.
      description: This type represents subscription filter criteria to match VNF instances.
    NotificationType:
      title: NotificationType
      enum:
      - AlarmNotification
      - AlarmClearedNotification
      - AlarmListRebuiltNotification
      type: string
    Authentication:
      title: Authentication
      required:
      - authType
      type: object
      properties:
        authType:
          type: array
          items:
            $ref: '#/components/schemas/AuthType'
          description: "Defines the types of Authentication / Authorization which the API consumer is willing to accept when receiving a notification. Permitted values: * BASIC: In every HTTP request to the notification endpoint, use\n  HTTP Basic authentication with the client credentials. \n* OAUTH2_CLIENT_CREDENTIALS: In every HTTP request to the\n  notification endpoint, use an OAuth 2.0 Bearer token, obtained\n  using the client credentials grant type.\n* TLS_CERT: Every HTTP request to the notification endpoint is sent\n  over a mutually authenticated TLS session, i.e. not only the\n  server is authenticated, but also the client is authenticated\n  during the TLS tunnel setup."
        paramsBasic:
          allOf:
          - $ref: '#/components/schemas/ParamsBasic'
          - description: Parameters for authentication/authorization using BASIC. Shall be present if authType is "BASIC" and the contained information has not been provisioned out of band. Shall be absent otherwise.
        paramsOauth2ClientCredentials:
          allOf:
          - $ref: '#/components/schemas/ParamsOauth2ClientCredentials'
          - description: Parameters for authentication/authorization using OAUTH2_CLIENT_CREDENTIALS. Shall be present if authType is "OAUTH2_CLIENT_CREDENTIALS" and the contained information has not been provisioned out of band. Shall be absent otherwise.
    AuthType:
      title: AuthType
      enum:
      - BASIC
      - OAUTH2_CLIENT_CREDENTIALS
      - TLS_CERT
      type: string
    ParamsBasic:
      title: ParamsBasic
      type: object
      properties:
        userName:
          type: string
          description: Username to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.
        password:
          type: string
          description: Password to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.
      description: Parameters for authentication/authorization using BASIC. Shall be present if authType is "BASIC" and the contained information has not been provisioned out of band. Shall be absent otherwise.
    ParamsOauth2ClientCredentials:
      title: ParamsOauth2ClientCredentials
      type: object
      properties:
        clientId:
          type: string
          description: Client identifier to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.
        clientPassword:
          type: string
          description: Client password to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.
        tokenEndpoint:
          type: string
          description: String formatted according to IETF RFC 3986.
      description: Parameters for authentication/authorization using OAUTH2_CLIENT_CREDENTIALS. Shall be present if authType is "OAUTH2_CLIENT_CREDENTIALS" and the contained information has not been provisioned out of band. Shall be absent otherwise.
    Subscriptions.Post.200:
      title: Subscriptions.Post.200
      required:
      - id
      - callbackUri
      - _links
      type: object
      properties:
        id:
          type: string
          description: An identifier with the intention of being globally unique.
        filter:
          allOf:
          - $ref: '#/components/schemas/Filter'
          - description: 'This type represents a subscription filter related to notifications about VNF faults. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical "and" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical "or" between the values of one filter attribute).'
        callbackUri:
          type: string
          description: String formatted according to IETF RFC 3986.
        _links:
          allOf:
          - $ref: '#/components/schemas/Links2'
          - description: Links for this resource.
      description: This type represents a subscription related to notifications about VNF faults.
    Links2:
      title: Links2
      required:
      - self
      type: object
      properties:
        self:
          allOf:
          - $ref: '#/components/schemas/Self'
          - description: This type represents a link to a resource using an absolute URI.
      description: Links for this resource.
    Subscriptions400Error1:
      title: Subscriptions400Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions401Error1:
      title: Subscriptions401Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions403Error1:
      title: Subscriptions403Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions404Error1:
      title: Subscriptions404Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions405Error1:
      title: Subscriptions405Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions406Error1:
      title: Subscriptions406Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions422Error1:
      title: Subscriptions422Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions500Error1:
      title: Subscriptions500Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions503Error1:
      title: Subscriptions503Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions504Error:
      title: Subscriptions504Error
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions504Error1:
      title: Subscriptions504Error1
      required:
      - status
      - detail
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be "about:blank".
        title:
          type: string
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
      description: >
        The definition of the general "ProblemDetails" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the "status" and "detail" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the "ProblemDetails" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].
    Subscriptions.Get.200:
      title: Subscriptions.Get.200
      required:
      - id
      - callbackUri
      - _links
      type: object
      properties:
        id:
          type: string
          description: An identifier with the intention of being globally unique.
        filter:
          allOf:
          - $ref: '#/components/schemas/Filter'
          - description: 'This type represents a subscription filter related to notifications about VNF faults. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical "and" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical "or" between the values of one filter attribute).'
        callbackUri:
          type: string
          description: String formatted according to IETF RFC 3986.
        _links:
          allOf:
          - $ref: '#/components/schemas/Links2'
          - description: Links for this resource.
      description: This type represents a subscription related to notifications about VNF faults.
    IndividualSubscription.Get.200:
      title: IndividualSubscription.Get.200
      required:
      - id
      - callbackUri
      - _links
      type: object
      properties:
        id:
          type: string
          description: An identifier with the intention of being globally unique.
        filter:
          allOf:
          - $ref: '#/components/schemas/Filter'
          - description: 'This type represents a subscription filter related to notifications about VNF faults. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical "and" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical "or" between the values of one filter attribute).'
        callbackUri:
          type: string
          description: String formatted according to IETF RFC 3986.
        _links:
          allOf:
          - $ref: '#/components/schemas/Links2'
          - description: Links for this resource.
      description: This type represents a subscription related to notifications about VNF faults.
tags: []
externalDocs:
  description: ETSI GS NFV-SOL 003 V3.3.1
  url: https://www.etsi.org/deliver/etsi_gs/NFV-SOL/001_099/003/03.03.01_60/gs_NFV-SOL003v030301p.pdf
