{
  "openapi": "3.0.2",
  "info": {
    "title": "SOL003 - VNF Lifecycle Operation Granting interface",
    "description": "SOL003 - VNF Lifecycle Operation Granting interface\n\nIMPORTANT: Please note that this file might be not aligned to the current\nversion of the ETSI Group Specification it refers to. In case of\ndiscrepancies the published ETSI Group Specification takes precedence.\n\nPlease report bugs to https://forge.etsi.org/rep/nfv/SOL002-SOL003/issues\n",
    "contact": {
      "name": "NFV-SOL WG"
    },
    "license": {
      "name": "ETSI Forge copyright notice",
      "url": "https://forge.etsi.org/etsi-forge-copyright-notice.txt"
    },
    "version": "1.4.0-impl:etsi.org:ETSI_NFV_OpenAPI:1"
  },
  "externalDocs": {
    "description": "ETSI GS NFV-SOL 003 V3.3.1",
    "url": "https://www.etsi.org/deliver/etsi_gs/NFV-SOL/001_099/003/03.03.01_60/gs_NFV-SOL003v030301p.pdf"
  },
  "servers": [
    {
      "url": "http://127.0.0.1/grant/v1"
    },
    {
      "url": "https://127.0.0.1/grant/v1"
    }
  ],
  "paths": {
    "/api_versions": {
      "parameters": [
        {
          "name": "Version",
          "description": "Version of the API requested to use when responding to this request.\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve API version information",
        "description": "The GET method reads API version information. This method shall follow the provisions specified in table 4.6.3.3.3.2-1 for request and response data structures, and response codes. URI query parameters are not supported.\n",
        "responses": {
          "200": {
            "description": "200 OK\nAPI version information was read successfully. The response body shall contain 4.4 API version information, as defined in clause 4.4.1.13.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "Version": {
                "description": "The used API version.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "This type represents API version information.\n",
                  "type": "object",
                  "required": [
                    "uriPrefix",
                    "apiVersions"
                  ],
                  "properties": {
                    "uriPrefix": {
                      "description": "Specifies the URI prefix for the API, in the following form {apiRoot}/{apiName}/{apiMajorVersion}/.\n",
                      "type": "string"
                    },
                    "apiVersions": {
                      "description": "Version(s) supported for the API signaled by the uriPrefix attribute.\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "version"
                        ],
                        "properties": {
                          "version": {
                            "description": "Identifies a supported version. The value of the version attribute shall be a version identifier as specified in clause 9.1 (SOL013).\n",
                            "type": "string"
                          },
                          "isDeprecated": {
                            "description": "If such information is available, this attribute indicates whether use of the version signaled by the version attribute is deprecated (true) or not (false).\nA deprecated version is still supported by the API producer but is recommended not to be used any longer. When a version is no longer supported, it does not appear in the response body.\n",
                            "type": "boolean"
                          },
                          "retirementDate": {
                            "description": "Date-time stamp. Representation: String formatted according to IETF RFC 3339.\n",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "413 PAYLOAD TOO LARGE\nIf the payload body of a request is larger than the amount of data the API producer is willing or able to process, it shall respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for closing the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "414": {
            "description": "414 URI TOO LONG\nIf the request URI of a request is longer than the API producer is willing or able to process, it shall respond with this response code. This condition can e.g. be caused by passing long queries in the request URI of a GET request. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "416": {
            "description": "416 Range Not Satisfiable\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "429 TOO MANY REQUESTS\nIf the API consumer has sent too many requests in a defined period of time and the API producer is able to detect that condition (\"rate limiting\"), the API producer shall respond with this response code, following the provisions in IETF RFC 6585 [17] for the use of the \"Retry-After\" HTTP header. The \"ProblemDetails\" structure shall be provided and shall include in the \"detail\" attribute more information about the source of the problem.\nThe period of time and allowed number of requests are configured within the API producer by means outside the scope of the present document.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/grants": {
      "post": {
        "description": "Grant Lifecycle Operation.\nThe POST method requests a grant for a particular VNF lifecycle operation.\nThis method shall follow the provisions specified in the tables 9.4.2.3.1-1 and 9.4.2.3.1-2\nfor URI query parameters, request and response data structures, and response codes.\nAs the result of successfully processing this request, a new \"Individual grant\" resource\nshall be created. In the synchronous case which is indicated by responding with \"201 Created\",\nthat resource shall be created before the 200 OK response is returned. In the asynchronous\ncase which is indicated by responding with \"202 Accepted\", this resource may be created\nafter the response is returned.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Version",
            "description": "Version of the API requested to use when responding to this request.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GrantRequest"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Grants.Post.201"
          },
          "202": {
            "$ref": "#/components/responses/Grants.Post.202"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/grants/{grantId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/GrantId"
        }
      ],
      "get": {
        "description": "Grant Lifecycle Operation.\nThe GET method reads a grant.\nThis method shall follow the provisions specified in the tables 9.4.3.3.2-1 and 9.4.3.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Version",
            "description": "Version of the API requested to use when responding to this request.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IndividualGrant.Get.200"
          },
          "202": {
            "$ref": "#/components/responses/IndividualGrant.Get.202"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "GrantId": {
        "name": "grantId",
        "in": "path",
        "description": "Identifier of the grant.\nThis identifier can be retrieved from the resource referenced by the\n\"Location\" HTTP header in the response to a POST request granting a\nnew VNF lifecycle operation. It can also be retrieved from the \"id\"\nattribute in the payload body of that response.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "GrantRequest": {
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a grant request.\n",
              "type": "object",
              "required": [
                "vnfInstanceId",
                "vnfLcmOpOccId",
                "vnfdId",
                "operation",
                "isAutomaticInvocation",
                "_links"
              ],
              "properties": {
                "vnfInstanceId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfLcmOpOccId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfdId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "dstVnfdId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "flavourId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "operation": {
                  "description": "The enumeration GrantedLcmOperationType defines the permitted values  to represent VNF lifecycle operation types in grant requests. Value | Description ------|------------ INSTANTIATE | Represents the \"Instantiate VNF\" LCM operation. SCALE | Represents the \"Scale VNF\" LCM operation. SCALE_TO_LEVEL | Represents the \"Scale VNF to Level\" LCM operation. CHANGE_FLAVOUR | Represents the \"Change VNF Flavour\" LCM operation. TERMINATE | Represents the \"Terminate VNF\" LCM operation. HEAL | Represents the \"Heal VNF\" LCM operation. OPERATE | Represents the \"Operate VNF\" LCM operation. CHANGE_EXT_CONN | Represents the \"Change external VNF connectivity\" LCM operation.      CHANGE_VNFPKG | Represents the \"Change current VNF package\" LCM operation. CREATE_SNAPSHOT | Represents the \"Create VNF snapshot\" LCM operation. REVERT_TO_SNAPSHOT | Represents the \"Revert to VNF snapshot\" LCM operation.\n",
                  "type": "string",
                  "enum": [
                    "INSTANTIATE",
                    "SCALE",
                    "SCALE_TO_LEVEL",
                    "CHANGE_FLAVOUR",
                    "TERMINATE",
                    "HEAL",
                    "OPERATE",
                    "CHANGE_EXT_CONN",
                    "CHANGE_VNFPKG",
                    "CREATE_SNAPSHOT",
                    "REVERT_TO_SNAPSHOT"
                  ]
                },
                "isAutomaticInvocation": {
                  "description": "Set to true if this VNF LCM operation occurrence has been triggered by an automated procedure inside the VNFM (i.e. ScaleVnf / ScaleVnfToLevel triggered by auto-scale, or HealVnf triggered by auto-heal). Set to false otherwise.\n",
                  "type": "boolean"
                },
                "instantiationLevelId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "addResources": {
                  "description": "List of resource definitions in the VNFD for resources to be added by the LCM operation which is related to this grant request, with one entry per resource. If the granting request is for InstantiateVNF, either instantiationLevel or addResources shall be present.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information of an existing or proposed resource used by the VNF.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource definition referenced. Permitted values: * COMPUTE * VL * STORAGE * LINKPORT\n",
                        "type": "string",
                        "enum": [
                          "COMPUTE",
                          "VL",
                          "STORAGE",
                          "LINKPORT"
                        ]
                      },
                      "vduId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vnfdId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceTemplateId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "resource": {
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          },
                          "vimLevelResourceType": {
                            "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                            "type": "string"
                          }
                        }
                      },
                      "snapshotResDef": {
                        "description": "This type represents resource definition information related to a snapshot resource.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId"
                        ],
                        "properties": {
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                            "type": "string"
                          },
                          "snapshotResource": {
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                            "properties": {
                              "vimConnectionId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceProviderId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceId": {
                                "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                "type": "string"
                              },
                              "vimLevelResourceType": {
                                "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "tempResources": {
                  "description": "List of resource definitions in the VNFD for resources to be temporarily instantiated during the runtime of the LCM operation which is related to this grant request, with one entry per resource. The NFVO will assume that the VNFM will be responsible to both allocate and release the temporary resource during the runtime of the LCM operation. This means, the resource can be allocated and consumed after the \"start\" notification for the LCM operation is sent by the VNFM, and the resource will be released before the \"result\" notification of the VNF LCM operation is sent by the VNFM.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information of an existing or proposed resource used by the VNF.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource definition referenced. Permitted values: * COMPUTE * VL * STORAGE * LINKPORT\n",
                        "type": "string",
                        "enum": [
                          "COMPUTE",
                          "VL",
                          "STORAGE",
                          "LINKPORT"
                        ]
                      },
                      "vduId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vnfdId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceTemplateId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "resource": {
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          },
                          "vimLevelResourceType": {
                            "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                            "type": "string"
                          }
                        }
                      },
                      "snapshotResDef": {
                        "description": "This type represents resource definition information related to a snapshot resource.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId"
                        ],
                        "properties": {
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                            "type": "string"
                          },
                          "snapshotResource": {
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                            "properties": {
                              "vimConnectionId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceProviderId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceId": {
                                "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                "type": "string"
                              },
                              "vimLevelResourceType": {
                                "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "removeResources": {
                  "description": "Provides the definitions of resources to be removed by the LCM operation which is related to this grant request, with one entry per resource.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information of an existing or proposed resource used by the VNF.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource definition referenced. Permitted values: * COMPUTE * VL * STORAGE * LINKPORT\n",
                        "type": "string",
                        "enum": [
                          "COMPUTE",
                          "VL",
                          "STORAGE",
                          "LINKPORT"
                        ]
                      },
                      "vduId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vnfdId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceTemplateId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "resource": {
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          },
                          "vimLevelResourceType": {
                            "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                            "type": "string"
                          }
                        }
                      },
                      "snapshotResDef": {
                        "description": "This type represents resource definition information related to a snapshot resource.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId"
                        ],
                        "properties": {
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                            "type": "string"
                          },
                          "snapshotResource": {
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                            "properties": {
                              "vimConnectionId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceProviderId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceId": {
                                "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                "type": "string"
                              },
                              "vimLevelResourceType": {
                                "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "updateResources": {
                  "description": "Provides the definitions of resources to be modified by the LCM operation which is related to this grant request, with one entry per resource.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information of an existing or proposed resource used by the VNF.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource definition referenced. Permitted values: * COMPUTE * VL * STORAGE * LINKPORT\n",
                        "type": "string",
                        "enum": [
                          "COMPUTE",
                          "VL",
                          "STORAGE",
                          "LINKPORT"
                        ]
                      },
                      "vduId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vnfdId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceTemplateId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "resource": {
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          },
                          "vimLevelResourceType": {
                            "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                            "type": "string"
                          }
                        }
                      },
                      "snapshotResDef": {
                        "description": "This type represents resource definition information related to a snapshot resource.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId"
                        ],
                        "properties": {
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                            "type": "string"
                          },
                          "snapshotResource": {
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                            "properties": {
                              "vimConnectionId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceProviderId": {
                                "description": "An identifier with the intention of being globally unique.\n",
                                "type": "string"
                              },
                              "resourceId": {
                                "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                "type": "string"
                              },
                              "vimLevelResourceType": {
                                "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "placementConstraints": {
                  "description": "Placement constraints that the VNFM may send to the NFVO in order to influence the resource placement decision. If sent, the NFVO shall take the constraints into consideration when making resource placement decisions, and shall reject the grant if they cannot be honoured. The affinity/anti-affinity rules defined in the VNFD , and the placement constraints in the GrantVnfLifecycleOperation as defined in this clause should be conflict-free. In case of conflicts, the placement constraints in the GrantVnfLifecycleOperation shall take precedence. Passing constraints allows the VNFM or the lifecycle management scripts to influence resource placement decisions by the NFVO to ensure VNF properties such as performance or fault tolerance. If fallbackBestEffort is present in placement constraints and set to “true”, the NFVO shall process the Affinity/AntiAffinity constraint in a best effort manner, in which case, if specified resources cannot be allocated based on specified placement constraint, the NFVO looks for an alternate best effort placement for the specified resources to be granted. In the best effort anti-affinity case, the resources are expected to be spread optimally over all available instances of scope (e.g. zones), and in the best effort affinity case, they are expected to be distributed optimally over fewer possible instances of scope.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a resource placement constraint. A set of such constraints may be sent by the VNFM to the NFVO to influence the resource placement decisions made by the NFVO as part of the granting process. A placement constraint defines a condition to the placement of new resources, considering other new resources as well as existing resources. EXAMPLE: The following rules influence the placement of a set of resources such that they are placed in the same Network Function Virtualisation Infrastructure Point of Presence (NFVI-PoP) but in different resource zones: {type=\"AFFINITY\"; scope=\"NFVI_POP\"; {resource1,resource2}} {type=\"ANTI_AFFINITY\"; scope=\"ZONE\"; {resource1,resource2}}\n",
                    "type": "object",
                    "required": [
                      "affinityOrAntiAffinity",
                      "scope",
                      "resource"
                    ],
                    "properties": {
                      "affinityOrAntiAffinity": {
                        "description": "The type of the constraint. Permitted values: * AFFINITY * ANTI_AFFINITY\n",
                        "type": "string",
                        "enum": [
                          "AFFINITY",
                          "ANTI_AFFINITY"
                        ]
                      },
                      "scope": {
                        "description": "The scope of the placement constraint indicating the category of the \"place\" where the constraint applies. Permitted values: * NFVI_POP * ZONE * ZONE_GROUP * NFVI_NODE\n",
                        "type": "string",
                        "enum": [
                          "NFVI_POP",
                          "ZONE",
                          "ZONE_GROUP",
                          "NFVI_NODE"
                        ]
                      },
                      "resource": {
                        "description": "References to resources in the constraint rule.\n",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "description": "This type references a resource either by its VIM-level identifier for existing resources, or by the identifier of a \"ResourceDefinition\" structure in the \"GrantRequest\" structure for new resources.\n",
                          "type": "object",
                          "required": [
                            "idType",
                            "resourceId"
                          ],
                          "properties": {
                            "idType": {
                              "description": "The type of the identifier. Permitted values: * RES_MGMT: Resource-management-level identifier; this identifier is\n  managed by the VIM in the direct mode of VNF-related resource\n  management, and is managed by the NFVO in the indirect mode)\n* GRANT: Reference to the identifier of a \"ResourceDefinition\" structure in the \"GrantRequest\" structure.\n",
                              "type": "string",
                              "enum": [
                                "RES_MGMT",
                                "GRANT"
                              ]
                            },
                            "resourceId": {
                              "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                              "type": "string"
                            },
                            "vimConnectionId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceProviderId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "fallbackBestEffort": {
                        "description": "The Boolean is a data type having two values (true and false).\n",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "vimConstraints": {
                  "description": "Used by the VNFM to require that multiple resources are managed through the same VIM connection. If sent, the NFVO shall take the constraints into consideration when making VIM selection decisions, and shall reject the grant if they cannot be honoured. This attribute shall be supported if VNF-related Resource Management in direct mode is applicable. The applicability and further details of this attribute for indirect mode are left for future specification.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a VIM selection constraint. A set of such constraints may be sent by the VNFM to the NFVO to influence the VIM selection decisions made by the NFVO as part of the granting process.\n",
                    "type": "object",
                    "required": [
                      "resource"
                    ],
                    "properties": {
                      "sameResourceGroup": {
                        "description": "If present and set to true, this signals that the constraint applies not only to the same VIM connection, but also to the same infrastructure resource group.\n",
                        "type": "boolean"
                      },
                      "resource": {
                        "description": "References to resources in the constraint rule. The NFVO shall ensure that all resources in this list are managed through the same VIM connection. If \"sameResourceGroup\" is set to true, the NFVO shall further ensure that all resources in this list are part of the same infrastructure resource group in that VIM connection.\n",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "description": "This type references a resource either by its VIM-level identifier for existing resources, or by the identifier of a \"ResourceDefinition\" structure in the \"GrantRequest\" structure for new resources.\n",
                          "type": "object",
                          "required": [
                            "idType",
                            "resourceId"
                          ],
                          "properties": {
                            "idType": {
                              "description": "The type of the identifier. Permitted values: * RES_MGMT: Resource-management-level identifier; this identifier is\n  managed by the VIM in the direct mode of VNF-related resource\n  management, and is managed by the NFVO in the indirect mode)\n* GRANT: Reference to the identifier of a \"ResourceDefinition\" structure in the \"GrantRequest\" structure.\n",
                              "type": "string",
                              "enum": [
                                "RES_MGMT",
                                "GRANT"
                              ]
                            },
                            "resourceId": {
                              "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                              "type": "string"
                            },
                            "vimConnectionId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceProviderId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "additionalParams": {
                  "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                  "type": "object"
                },
                "_links": {
                  "description": "Links to resources related to this request.\n",
                  "type": "object",
                  "required": [
                    "vnfLcmOpOcc",
                    "vnfInstance"
                  ],
                  "properties": {
                    "vnfLcmOpOcc": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfInstance": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "Grants.Post.201": {
        "description": "201 CREATED\n\nShall be returned when the grant has been created successfully (synchronous mode).\nA representation of the created \"Individual grant\" resource shall be returned in the response body.\nThe HTTP response shall include a \"Location\" HTTP header that indicates the URI of the \"Individual grant\"\nresource just created.\n",
        "headers": {
          "Location": {
            "description": "The resource URI of the created subscription resource.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a grant.\n",
              "type": "object",
              "required": [
                "id",
                "vnfInstanceId",
                "vnfLcmOpOccId",
                "_links"
              ],
              "properties": {
                "id": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfInstanceId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfLcmOpOccId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vimConnectionInfo": {
                  "description": "Provides information regarding VIM connections that are approved to be used by the VNFM to allocate resources, and provides parameters of these VIM connections. The VNFM shall update the \" vimConnectionInfo\" attribute of the \"VnfInstance\" structure by adding unknown entries received in this attribute. This attribute is not intended for the modification of vimConnectionInfo entries passed earlier; for that, the VnfInfoModificationRequest structure shall be used. This attribute shall only be supported when VNF-related Resource Management in direct mode is applicable. In direct mode, this parameter shall be absent if the VIM information was configured to the VNFM in another way, present otherwise. This interface allows to signal the use of multiple VIMs per VNF. However, due to the partial support of this feature in the present release, it is recommended in the present document that the number of entries in the \"vims\" attribute in the Grant is not greater than 1.\n",
                  "type": "object",
                  "additionalProperties": {
                    "description": "This type represents parameters to connect to a VIM for managing the resources of a VNF instance. This structure is used to convey VIM-related parameters over the Or-Vnfm interface. Additional parameters for a VIM may be configured into the VNFM by means outside the scope of the present document, and bound to the identifier of that VIM.\n",
                    "type": "object",
                    "required": [
                      "vimType"
                    ],
                    "properties": {
                      "vimId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimType": {
                        "description": "Discriminator for the different types of the VIM information. The value of this attribute determines the structure of the \"interfaceInfo\" and \"accessInfo\" attributes, based on the type of the VIM. The set of permitted values is expected to change over time as new types or versions of VIMs become available. The ETSI NFV registry of VIM-related information provides access to information about VimConnectionInfo definitions for various VIM types. The structure of the registry is defined in Annex C of SOL003.\n",
                        "type": "string"
                      },
                      "interfaceInfo": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      },
                      "accessInfo": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      },
                      "extra": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      }
                    }
                  }
                },
                "zones": {
                  "description": "Identifies resource zones where the resources are approved to be allocated by the VNFM.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a resource zone.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "zoneId"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "zoneGroups": {
                  "description": "Information about groups of resource zones that are related and that the NFVO has chosen to fulfil a zoneGroup constraint in the GrantVnfLifecycleOperation request. This information confirms that the NFVO has honoured the zoneGroup constraints that were passed as part of \"placementConstraints\" in the GrantRequest.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a resource zone group. A resource zone group is a group of one or more related resource zones which can be used in resource placement constraints. To fulfil such constraint, the NFVO may decide to place a resource into any zone that belongs to a particular group. NOTE: A resource zone group can be used to support overflow from one resource zone into another, in case a particular deployment supports only non-elastic resource zones.\n",
                    "type": "object",
                    "required": [
                      "zoneId"
                    ],
                    "properties": {
                      "zoneId": {
                        "description": "References of identifiers of \"ZoneInfo\" structures, each of which provides information about a resource zone that belongs to this group.\n",
                        "type": "array",
                        "items": {
                          "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "addResources": {
                  "description": "List of resources that are approved to be added, with one entry per resource. Shall be set when resources are approved to be added.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "tempResources": {
                  "description": "List of resources that are approved to be temporarily instantiated during the runtime of the lifecycle operation, with one entry per resource. Shall be set when resources are approved to be temporarily  instantiated.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "removeResources": {
                  "description": "List of resources that are approved to be removed, with one entry per resource. Shall be set when resources are approved to be removed.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "updateResources": {
                  "description": "List of resources that are approved to be modified, with one entry per resource. Shall be set when resources are approved to be updated.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "vimAssets": {
                  "description": "Information about assets for the VNF that are managed by the NFVO in the VIM, such as software images and virtualised compute resource flavours. The Grant response allows the NFVO to pass to the VNFM VIM assets related to the VNF package that is identified by the vnfdId attribute in the corresponding Grant request. The NFVO may send in each Grant response the full set of VIM assets related to the VNF package defined by the vnfdId in the related Grant request, but shall send this information if the vnfdId in the related Grant request differs from the vnfdId passed in the previous Grant request, or if the Grant response is related to an InstantiateVnf operation. The set of VIM assets shall not change between subsequent Grant responses if the vnfdId has not changed. During each LCM operation occurrence, the VIM assets that relate to the VNF package identified by the current value of the vnfdId attribute in the “VnfInstance” structure shall be used by the VNFM for newly created resources. If the VNF package identifier of the VNF instance has been updated, VIM assets that relate to the previously-used VNF package(s), and that were communicated in previous Grant responses, apply to existing resources.\n",
                  "type": "object",
                  "properties": {
                    "computeResourceFlavours": {
                      "description": "Mappings between virtual compute descriptors defined in the VNFD and compute resource flavours managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "If the VIM requires the use of virtual compute resource flavours during compute resource instantiation, it is assumed that such flavours are selected or created by the NFVO based on the information in the virtual compute descriptor defined in the VNFD. This type defines the mapping between a virtual compute descriptor in the VNFD and the corresponding compute resource flavour managed by the NFVO in the VIM.\n",
                        "type": "object",
                        "required": [
                          "vnfdVirtualComputeDescId",
                          "vimFlavourId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfdVirtualComputeDescId": {
                            "description": "An identifier that is unique within a VNF descriptor.\n",
                            "type": "string"
                          },
                          "vimFlavourId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "softwareImages": {
                      "description": "Mappings between software images defined in the VNFD and software images managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "This type contains a mapping between a software image definition the VNFD and the corresponding software image managed by the NFVO in the VIM which is needed during compute resource instantiation.\n",
                        "type": "object",
                        "required": [
                          "vnfdSoftwareImageId",
                          "vimSoftwareImageId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfdSoftwareImageId": {
                            "description": "An identifier that is unique within a VNF descriptor.\n",
                            "type": "string"
                          },
                          "vimSoftwareImageId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "snapshotResources": {
                      "description": "Mappings between snapshot resources defined in the VNF snapshot package and resources managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "This type contains a mapping between a snapshot resource definition related to a VNF snapshot  and the corresponding resource managed by the NFVO in the VIM which is needed during the revert  to VNF snapshot operation.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId",
                          "vnfcSnapshotId",
                          "vimSnapshotResourceId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "Identifier of the virtual storage resource that has been snapshotted as referred in the VNFC snapshot information. Shall only be present if the snapshot resource in the VIM is a storage  resource (as indicated by \"type=STORAGE\" in the parent resource definition). $ref: \"../../../definitions/SOL002SOL003_def.yaml#/definitions/IdentifierInVnf\"\n"
                          },
                          "vimSnapshotResourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "extVirtualLinks": {
                  "description": "Information about external VLs to connect the VNF to. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\nIf this attribute is present , it need not contain those entries that are unchanged compared to the entries that were passed in the LCM operation which is related to this granting exchange. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\n",
                  "type": "array",
                  "items": {
                    "description": "This type represents an external VL.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "resourceId",
                      "extCps"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "extCps": {
                        "description": "External CPs of the VNF to be connected to this external VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents configuration information for external CPs created from a CPD.\n",
                          "type": "object",
                          "required": [
                            "cpdId"
                          ],
                          "properties": {
                            "cpdId": {
                              "description": "An identifier that is unique within a VNF descriptor.\n",
                              "type": "string"
                            },
                            "cpConfig": {
                              "description": "Map of instance data that need to be configured on the CP instances created from the respective CPD. The key of the map which identifies the individual VnfExtCpConfig entries is managed by the API consumer. The entries shall be applied by the VNFM according to the rules of JSON Merge Patch (see IETF RFC 7396). Within one VNF instance, all VNFC instances created from a particular VDU have the same external connectivity. Thus, given a particular value of the “cpdId” attribute, there shall be one “cpConfig” entry for each VNFC instance that has been or can be created from a VDU which includes a CPD identified by the “cpdId” attribute. If the cpConfig represents a subport in a trunk, all “cpConfig” entries in this list shall have the same segmentationId, which means they are connected to the same set of external VLs via the trunk. The map entry value shall be set to \"null\" in order to delete a \"VnfExtCpConfig\" entry identified by a particular key value from the map, i.e. for the disconnection of an existing external CP instance addressed by cpInstanceId in the deleted map entry from a particular external virtual link, and deletion of that instance in case it represents a subport. Deleting the last key from the map removes the affected instance of the \"VnfExtCpData\" structure from its parent data structure.\n",
                              "type": "object",
                              "additionalProperties": {
                                "description": "This type represents an externally provided link port or network address information per instance of an external connection point. In case a link port is provided, the VNFM shall use that link port when connecting the external CP to the external VL. In a link port is not provided, the VNFM shall create a link port on the external VL, and use that link port to connect the external CP to the external VL.\n",
                                "anyOf": [
                                  {
                                    "required": [
                                      "linkPortId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "cpProtocolData"
                                    ]
                                  }
                                ],
                                "type": "object",
                                "properties": {
                                  "parentCpConfigId": {
                                    "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                                    "type": "string"
                                  },
                                  "linkPortId": {
                                    "description": "An identifier with the intention of being globally unique.\n",
                                    "type": "string"
                                  },
                                  "cpProtocolData": {
                                    "description": "Parameters for configuring the network protocols on the link port that connects the CP to a VL. The following conditions apply to the attributes \"linkPortId\" and \"cpProtocolData\": 1) Void 2) At least one of the \"linkPortId\" and \"cpProtocolData\" attributes \n   shall be present for an external CP instance representing a subport \n   that is to be created, or an external CP instance that is to be created \n   by creating the corresponding VNFC or VNF instance during the current or \n   a subsequent LCM operation, or for an existing external CP instance \n   that is to be re-configured or added to a particular external virtual link.\n3) If the \"linkPortId\" attribute is absent, the VNFM shall create a\n   link port.\n4) If the \"cpProtocolData\" attribute is absent, the \"linkPortId\"\n   attribute shall be provided referencing a pre-created link port,\n   and the VNFM can use means outside the scope of the present\n   document to obtain the pre-configured address information for the\n   connection point from the resource representing the link port.\n5) If both \"cpProtocolData\" and \"linkportId\" are provided, the API\n   consumer shall ensure that the cpProtocolData can be used with the\n   pre-created link port referenced by \"linkPortId\".\n",
                                    "type": "array",
                                    "items": {
                                      "description": "This type represents network protocol data.\n",
                                      "type": "object",
                                      "required": [
                                        "layerProtocol"
                                      ],
                                      "properties": {
                                        "layerProtocol": {
                                          "description": "Identifier of layer(s) and protocol(s). This attribute allows to signal the addition of further types of layer and protocol in future versions of the present document in a backwards-compatible way. In the current version of the present document, only IP over Ethernet is supported.\n",
                                          "type": "string",
                                          "enum": [
                                            "IP_OVER_ETHERNET"
                                          ]
                                        },
                                        "ipOverEthernet": {
                                          "description": "This type represents network address data for IP over Ethernet.\n",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "macAddress"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ipAddresses"
                                              ]
                                            }
                                          ],
                                          "oneOf": [
                                            {
                                              "required": [
                                                "fixedAddresses"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "numDynamicAddresses"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ipAddressRange"
                                              ]
                                            }
                                          ],
                                          "properties": {
                                            "macAddress": {
                                              "description": "A MAC address. Representation: string that consists of groups of two hexadecimal digits, separated by hyphens or colons.\n",
                                              "type": "string",
                                              "format": "MAC"
                                            },
                                            "segmentationId": {
                                              "description": "Identification of the network segment to which the Cp instance connects to. If the Cp instance represents a subport in a trunk, segmentationId shall be present. Otherwise it shall not be present. Depending on the NFVI networking infrastructure, the segmentationId may indicate the actual network segment value (e.g. vlan Id, Vxlan segmentation id, etc.) used in the transport header of the packets or it may be an identifier used between the application and the NFVI networking infrastructure to identify the network sub-interface of the trunk port in question. In the latter case the NFVI infrastructure will map this local segmentationId to whatever segmentationId is actually used by the NFVI’s transport technology.\n",
                                              "type": "string"
                                            },
                                            "ipAddresses": {
                                              "description": "List of IP addresses to assign to the CP instance. Each entry represents IP address data for fixed or dynamic IP address assignment per subnet. If this attribute is not present, no IP address shall be assigned.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "type"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "description": "The type of the IP addresses. Permitted values: IPV4, IPV6.\n",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  },
                                                  "fixedAddresses": {
                                                    "description": "Fixed addresses to assign (from the subnet defined by \"subnetId\" if provided). Exactly one of \"fixedAddresses\", \"numDynamicAddresses\" or \"ipAddressRange\" shall be present.\n",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                      "type": "string",
                                                      "format": "IP"
                                                    }
                                                  },
                                                  "numDynamicAddresses": {
                                                    "description": "Number of dynamic addresses to assign (from the subnet defined by \"subnetId\" if provided). Exactly one of \"fixedAddresses\", \"numDynamicAddresses\" or \"ipAddressRange\" shall be present.\n",
                                                    "type": "integer"
                                                  },
                                                  "addressRange": {
                                                    "description": "An IP address range to be used, e.g. in case of egress connections. In case this attribute is present, IP addresses from the range will be used.\n",
                                                    "type": "object",
                                                    "required": [
                                                      "minAddress",
                                                      "maxAddress"
                                                    ],
                                                    "properties": {
                                                      "minAddress": {
                                                        "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                        "type": "string",
                                                        "format": "IP"
                                                      },
                                                      "maxAddress": {
                                                        "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                        "type": "string",
                                                        "format": "IP"
                                                      }
                                                    }
                                                  },
                                                  "subnetId": {
                                                    "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "extLinkPorts": {
                        "description": "Externally provided link ports to be used to connect external connection points to this external VL. If this attribute is not present, the VNFM shall create the link ports on the external VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents an externally provided link port to be used to connect an external connection point to an external VL.\n",
                          "type": "object",
                          "required": [
                            "id",
                            "resourceHandle"
                          ],
                          "properties": {
                            "id": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceHandle": {
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                              "properties": {
                                "vimConnectionId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceProviderId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceId": {
                                  "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                  "type": "string"
                                },
                                "vimLevelResourceType": {
                                  "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "extManagedVirtualLinks": {
                  "description": "Information about internal VLs that are managed by other entities than the VNFM. The indication of externally-managed internal VLs is needed in case networks have been pre-configured for use with certain VNFs, for instance to ensure that these networks have certain properties such as security or acceleration features, or to address particular network topologies. The present document assumes that externally-managed internal VLs are managed by the NFVO and created towards the VIM. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\n",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "vnfVirtualLinkDescId",
                      "resourceId"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vnfVirtualLinkDescId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vnfLinkPort": {
                        "description": "Externally provided link ports to be used to connect VNFC connection points to this externally-managed VL on this network resource. If this attribute is not present, the VNFM shall create the link ports on the externally-managed VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents an externally provided link port to be used to connect a VNFC connection point  to an exernally managed VL.\n",
                          "type": "object",
                          "required": [
                            "vnfLinkPortId",
                            "resourceHandle"
                          ],
                          "properties": {
                            "vnfLinkPortId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceHandle": {
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                              "properties": {
                                "vimConnectionId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceProviderId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceId": {
                                  "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                  "type": "string"
                                },
                                "vimLevelResourceType": {
                                  "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "extManagedMultisiteVirtualLinkId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "additionalParams": {
                  "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                  "type": "object"
                },
                "_links": {
                  "description": "Links to resources related to this resource.\n",
                  "type": "object",
                  "required": [
                    "self",
                    "vnfLcmOpOcc",
                    "vnfInstance"
                  ],
                  "properties": {
                    "self": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfLcmOpOcc": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfInstance": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Grants.Post.202": {
        "description": "202 ACCEPTED\n\nShall be returned when the request has been accepted for processing\nand it is expected to take some time to create the grant (asynchronous mode).\nThe response body shall be empty.\nThe HTTP response shall include a \"Location\" HTTP header that indicates the URI\nof the \"Individual grant\" resource that will be created once the granting decision has been made.\n",
        "headers": {
          "Location": {
            "description": "The resource URI of the created subscription resource.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "IndividualGrant.Get.200": {
        "description": "200 OK\n\nShall be returned when the grant has been read successfully.\nA representation of the \"Individual grant\" resource shall be returned in the response body.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a grant.\n",
              "type": "object",
              "required": [
                "id",
                "vnfInstanceId",
                "vnfLcmOpOccId",
                "_links"
              ],
              "properties": {
                "id": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfInstanceId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vnfLcmOpOccId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "vimConnectionInfo": {
                  "description": "Provides information regarding VIM connections that are approved to be used by the VNFM to allocate resources, and provides parameters of these VIM connections. The VNFM shall update the \" vimConnectionInfo\" attribute of the \"VnfInstance\" structure by adding unknown entries received in this attribute. This attribute is not intended for the modification of vimConnectionInfo entries passed earlier; for that, the VnfInfoModificationRequest structure shall be used. This attribute shall only be supported when VNF-related Resource Management in direct mode is applicable. In direct mode, this parameter shall be absent if the VIM information was configured to the VNFM in another way, present otherwise. This interface allows to signal the use of multiple VIMs per VNF. However, due to the partial support of this feature in the present release, it is recommended in the present document that the number of entries in the \"vims\" attribute in the Grant is not greater than 1.\n",
                  "type": "object",
                  "additionalProperties": {
                    "description": "This type represents parameters to connect to a VIM for managing the resources of a VNF instance. This structure is used to convey VIM-related parameters over the Or-Vnfm interface. Additional parameters for a VIM may be configured into the VNFM by means outside the scope of the present document, and bound to the identifier of that VIM.\n",
                    "type": "object",
                    "required": [
                      "vimType"
                    ],
                    "properties": {
                      "vimId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimType": {
                        "description": "Discriminator for the different types of the VIM information. The value of this attribute determines the structure of the \"interfaceInfo\" and \"accessInfo\" attributes, based on the type of the VIM. The set of permitted values is expected to change over time as new types or versions of VIMs become available. The ETSI NFV registry of VIM-related information provides access to information about VimConnectionInfo definitions for various VIM types. The structure of the registry is defined in Annex C of SOL003.\n",
                        "type": "string"
                      },
                      "interfaceInfo": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      },
                      "accessInfo": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      },
                      "extra": {
                        "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                        "type": "object"
                      }
                    }
                  }
                },
                "zones": {
                  "description": "Identifies resource zones where the resources are approved to be allocated by the VNFM.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a resource zone.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "zoneId"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "zoneGroups": {
                  "description": "Information about groups of resource zones that are related and that the NFVO has chosen to fulfil a zoneGroup constraint in the GrantVnfLifecycleOperation request. This information confirms that the NFVO has honoured the zoneGroup constraints that were passed as part of \"placementConstraints\" in the GrantRequest.\n",
                  "type": "array",
                  "items": {
                    "description": "This type provides information regarding a resource zone group. A resource zone group is a group of one or more related resource zones which can be used in resource placement constraints. To fulfil such constraint, the NFVO may decide to place a resource into any zone that belongs to a particular group. NOTE: A resource zone group can be used to support overflow from one resource zone into another, in case a particular deployment supports only non-elastic resource zones.\n",
                    "type": "object",
                    "required": [
                      "zoneId"
                    ],
                    "properties": {
                      "zoneId": {
                        "description": "References of identifiers of \"ZoneInfo\" structures, each of which provides information about a resource zone that belongs to this group.\n",
                        "type": "array",
                        "items": {
                          "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "addResources": {
                  "description": "List of resources that are approved to be added, with one entry per resource. Shall be set when resources are approved to be added.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "tempResources": {
                  "description": "List of resources that are approved to be temporarily instantiated during the runtime of the lifecycle operation, with one entry per resource. Shall be set when resources are approved to be temporarily  instantiated.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "removeResources": {
                  "description": "List of resources that are approved to be removed, with one entry per resource. Shall be set when resources are approved to be removed.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "updateResources": {
                  "description": "List of resources that are approved to be modified, with one entry per resource. Shall be set when resources are approved to be updated.\n",
                  "type": "array",
                  "items": {
                    "description": "This type contains information about a Compute, storage or network resource whose addition/update/deletion was granted.\n",
                    "type": "object",
                    "required": [
                      "resourceDefinitionId"
                    ],
                    "properties": {
                      "resourceDefinitionId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "reservationId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "zoneId": {
                        "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                        "type": "string"
                      },
                      "resourceGroupId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "vimAssets": {
                  "description": "Information about assets for the VNF that are managed by the NFVO in the VIM, such as software images and virtualised compute resource flavours. The Grant response allows the NFVO to pass to the VNFM VIM assets related to the VNF package that is identified by the vnfdId attribute in the corresponding Grant request. The NFVO may send in each Grant response the full set of VIM assets related to the VNF package defined by the vnfdId in the related Grant request, but shall send this information if the vnfdId in the related Grant request differs from the vnfdId passed in the previous Grant request, or if the Grant response is related to an InstantiateVnf operation. The set of VIM assets shall not change between subsequent Grant responses if the vnfdId has not changed. During each LCM operation occurrence, the VIM assets that relate to the VNF package identified by the current value of the vnfdId attribute in the “VnfInstance” structure shall be used by the VNFM for newly created resources. If the VNF package identifier of the VNF instance has been updated, VIM assets that relate to the previously-used VNF package(s), and that were communicated in previous Grant responses, apply to existing resources.\n",
                  "type": "object",
                  "properties": {
                    "computeResourceFlavours": {
                      "description": "Mappings between virtual compute descriptors defined in the VNFD and compute resource flavours managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "If the VIM requires the use of virtual compute resource flavours during compute resource instantiation, it is assumed that such flavours are selected or created by the NFVO based on the information in the virtual compute descriptor defined in the VNFD. This type defines the mapping between a virtual compute descriptor in the VNFD and the corresponding compute resource flavour managed by the NFVO in the VIM.\n",
                        "type": "object",
                        "required": [
                          "vnfdVirtualComputeDescId",
                          "vimFlavourId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfdVirtualComputeDescId": {
                            "description": "An identifier that is unique within a VNF descriptor.\n",
                            "type": "string"
                          },
                          "vimFlavourId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "softwareImages": {
                      "description": "Mappings between software images defined in the VNFD and software images managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "This type contains a mapping between a software image definition the VNFD and the corresponding software image managed by the NFVO in the VIM which is needed during compute resource instantiation.\n",
                        "type": "object",
                        "required": [
                          "vnfdSoftwareImageId",
                          "vimSoftwareImageId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfdSoftwareImageId": {
                            "description": "An identifier that is unique within a VNF descriptor.\n",
                            "type": "string"
                          },
                          "vimSoftwareImageId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "snapshotResources": {
                      "description": "Mappings between snapshot resources defined in the VNF snapshot package and resources managed in the VIM.\n",
                      "type": "array",
                      "items": {
                        "description": "This type contains a mapping between a snapshot resource definition related to a VNF snapshot  and the corresponding resource managed by the NFVO in the VIM which is needed during the revert  to VNF snapshot operation.\n",
                        "type": "object",
                        "required": [
                          "vnfSnapshotId",
                          "vnfcSnapshotId",
                          "vimSnapshotResourceId"
                        ],
                        "properties": {
                          "vimConnectionId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "resourceProviderId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfSnapshotId": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          },
                          "vnfcSnapshotId": {
                            "description": "An identifier that is unique within a limited local scope other than above listed identifiers, such as within a complex data structure or within a request-response pair. Representation: string of variable length.\n",
                            "type": "string"
                          },
                          "storageSnapshotId": {
                            "description": "Identifier of the virtual storage resource that has been snapshotted as referred in the VNFC snapshot information. Shall only be present if the snapshot resource in the VIM is a storage  resource (as indicated by \"type=STORAGE\" in the parent resource definition). $ref: \"../../../definitions/SOL002SOL003_def.yaml#/definitions/IdentifierInVnf\"\n"
                          },
                          "vimSnapshotResourceId": {
                            "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "extVirtualLinks": {
                  "description": "Information about external VLs to connect the VNF to. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\nIf this attribute is present , it need not contain those entries that are unchanged compared to the entries that were passed in the LCM operation which is related to this granting exchange. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\n",
                  "type": "array",
                  "items": {
                    "description": "This type represents an external VL.\n",
                    "type": "object",
                    "required": [
                      "id",
                      "resourceId",
                      "extCps"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "extCps": {
                        "description": "External CPs of the VNF to be connected to this external VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents configuration information for external CPs created from a CPD.\n",
                          "type": "object",
                          "required": [
                            "cpdId"
                          ],
                          "properties": {
                            "cpdId": {
                              "description": "An identifier that is unique within a VNF descriptor.\n",
                              "type": "string"
                            },
                            "cpConfig": {
                              "description": "Map of instance data that need to be configured on the CP instances created from the respective CPD. The key of the map which identifies the individual VnfExtCpConfig entries is managed by the API consumer. The entries shall be applied by the VNFM according to the rules of JSON Merge Patch (see IETF RFC 7396). Within one VNF instance, all VNFC instances created from a particular VDU have the same external connectivity. Thus, given a particular value of the “cpdId” attribute, there shall be one “cpConfig” entry for each VNFC instance that has been or can be created from a VDU which includes a CPD identified by the “cpdId” attribute. If the cpConfig represents a subport in a trunk, all “cpConfig” entries in this list shall have the same segmentationId, which means they are connected to the same set of external VLs via the trunk. The map entry value shall be set to \"null\" in order to delete a \"VnfExtCpConfig\" entry identified by a particular key value from the map, i.e. for the disconnection of an existing external CP instance addressed by cpInstanceId in the deleted map entry from a particular external virtual link, and deletion of that instance in case it represents a subport. Deleting the last key from the map removes the affected instance of the \"VnfExtCpData\" structure from its parent data structure.\n",
                              "type": "object",
                              "additionalProperties": {
                                "description": "This type represents an externally provided link port or network address information per instance of an external connection point. In case a link port is provided, the VNFM shall use that link port when connecting the external CP to the external VL. In a link port is not provided, the VNFM shall create a link port on the external VL, and use that link port to connect the external CP to the external VL.\n",
                                "anyOf": [
                                  {
                                    "required": [
                                      "linkPortId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "cpProtocolData"
                                    ]
                                  }
                                ],
                                "type": "object",
                                "properties": {
                                  "parentCpConfigId": {
                                    "description": "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique.\n",
                                    "type": "string"
                                  },
                                  "linkPortId": {
                                    "description": "An identifier with the intention of being globally unique.\n",
                                    "type": "string"
                                  },
                                  "cpProtocolData": {
                                    "description": "Parameters for configuring the network protocols on the link port that connects the CP to a VL. The following conditions apply to the attributes \"linkPortId\" and \"cpProtocolData\": 1) Void 2) At least one of the \"linkPortId\" and \"cpProtocolData\" attributes \n   shall be present for an external CP instance representing a subport \n   that is to be created, or an external CP instance that is to be created \n   by creating the corresponding VNFC or VNF instance during the current or \n   a subsequent LCM operation, or for an existing external CP instance \n   that is to be re-configured or added to a particular external virtual link.\n3) If the \"linkPortId\" attribute is absent, the VNFM shall create a\n   link port.\n4) If the \"cpProtocolData\" attribute is absent, the \"linkPortId\"\n   attribute shall be provided referencing a pre-created link port,\n   and the VNFM can use means outside the scope of the present\n   document to obtain the pre-configured address information for the\n   connection point from the resource representing the link port.\n5) If both \"cpProtocolData\" and \"linkportId\" are provided, the API\n   consumer shall ensure that the cpProtocolData can be used with the\n   pre-created link port referenced by \"linkPortId\".\n",
                                    "type": "array",
                                    "items": {
                                      "description": "This type represents network protocol data.\n",
                                      "type": "object",
                                      "required": [
                                        "layerProtocol"
                                      ],
                                      "properties": {
                                        "layerProtocol": {
                                          "description": "Identifier of layer(s) and protocol(s). This attribute allows to signal the addition of further types of layer and protocol in future versions of the present document in a backwards-compatible way. In the current version of the present document, only IP over Ethernet is supported.\n",
                                          "type": "string",
                                          "enum": [
                                            "IP_OVER_ETHERNET"
                                          ]
                                        },
                                        "ipOverEthernet": {
                                          "description": "This type represents network address data for IP over Ethernet.\n",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "macAddress"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ipAddresses"
                                              ]
                                            }
                                          ],
                                          "oneOf": [
                                            {
                                              "required": [
                                                "fixedAddresses"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "numDynamicAddresses"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ipAddressRange"
                                              ]
                                            }
                                          ],
                                          "properties": {
                                            "macAddress": {
                                              "description": "A MAC address. Representation: string that consists of groups of two hexadecimal digits, separated by hyphens or colons.\n",
                                              "type": "string",
                                              "format": "MAC"
                                            },
                                            "segmentationId": {
                                              "description": "Identification of the network segment to which the Cp instance connects to. If the Cp instance represents a subport in a trunk, segmentationId shall be present. Otherwise it shall not be present. Depending on the NFVI networking infrastructure, the segmentationId may indicate the actual network segment value (e.g. vlan Id, Vxlan segmentation id, etc.) used in the transport header of the packets or it may be an identifier used between the application and the NFVI networking infrastructure to identify the network sub-interface of the trunk port in question. In the latter case the NFVI infrastructure will map this local segmentationId to whatever segmentationId is actually used by the NFVI’s transport technology.\n",
                                              "type": "string"
                                            },
                                            "ipAddresses": {
                                              "description": "List of IP addresses to assign to the CP instance. Each entry represents IP address data for fixed or dynamic IP address assignment per subnet. If this attribute is not present, no IP address shall be assigned.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "type"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "description": "The type of the IP addresses. Permitted values: IPV4, IPV6.\n",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  },
                                                  "fixedAddresses": {
                                                    "description": "Fixed addresses to assign (from the subnet defined by \"subnetId\" if provided). Exactly one of \"fixedAddresses\", \"numDynamicAddresses\" or \"ipAddressRange\" shall be present.\n",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                      "type": "string",
                                                      "format": "IP"
                                                    }
                                                  },
                                                  "numDynamicAddresses": {
                                                    "description": "Number of dynamic addresses to assign (from the subnet defined by \"subnetId\" if provided). Exactly one of \"fixedAddresses\", \"numDynamicAddresses\" or \"ipAddressRange\" shall be present.\n",
                                                    "type": "integer"
                                                  },
                                                  "addressRange": {
                                                    "description": "An IP address range to be used, e.g. in case of egress connections. In case this attribute is present, IP addresses from the range will be used.\n",
                                                    "type": "object",
                                                    "required": [
                                                      "minAddress",
                                                      "maxAddress"
                                                    ],
                                                    "properties": {
                                                      "minAddress": {
                                                        "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                        "type": "string",
                                                        "format": "IP"
                                                      },
                                                      "maxAddress": {
                                                        "description": "An IPV4 or IPV6 address. Representation: In case of an IPV4 address, string that consists of four decimal integers separated by dots, each integer ranging from 0 to 255. In case of an IPV6 address, string that consists of groups of zero to four hexadecimal digits, separated by colons.\n",
                                                        "type": "string",
                                                        "format": "IP"
                                                      }
                                                    }
                                                  },
                                                  "subnetId": {
                                                    "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "extLinkPorts": {
                        "description": "Externally provided link ports to be used to connect external connection points to this external VL. If this attribute is not present, the VNFM shall create the link ports on the external VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents an externally provided link port to be used to connect an external connection point to an external VL.\n",
                          "type": "object",
                          "required": [
                            "id",
                            "resourceHandle"
                          ],
                          "properties": {
                            "id": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceHandle": {
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                              "properties": {
                                "vimConnectionId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceProviderId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceId": {
                                  "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                  "type": "string"
                                },
                                "vimLevelResourceType": {
                                  "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "extManagedVirtualLinks": {
                  "description": "Information about internal VLs that are managed by other entities than the VNFM. The indication of externally-managed internal VLs is needed in case networks have been pre-configured for use with certain VNFs, for instance to ensure that these networks have certain properties such as security or acceleration features, or to address particular network topologies. The present document assumes that externally-managed internal VLs are managed by the NFVO and created towards the VIM. External and/or externally-managed internal VLs can be passed in VNF lifecycle management operation requests such as InstantiateVnf, ChangeVnfFlavor,  ChangeExtVnfConnectivity or ChangeCurrentVnfPackage and/or in the grant response.  The NFVO may choose to override in the grant response external and/or  externally-managed VL instances that have been passed previously in the  associated VNF lifecycle management request, if the lifecycle management request has originated from the NFVO itself. In case of granting an InstantiateVnf request that has originated from the NFVO  and that did not contain the \"extVirtualLinks\" attribute, this attribute shall be  set by the NFVO. Further in case of granting an InstantiateVnf request that has  originated from the NFVO and that did not contain the \"extManagedVirtualLinks\"  attribute, this attribute shall be set by the NFVO if there is the need to provide  information about externally-managed virtual links.\n",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "vnfVirtualLinkDescId",
                      "resourceId"
                    ],
                    "properties": {
                      "id": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "vnfVirtualLinkDescId": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      },
                      "vimConnectionId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceProviderId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                        "type": "string"
                      },
                      "vnfLinkPort": {
                        "description": "Externally provided link ports to be used to connect VNFC connection points to this externally-managed VL on this network resource. If this attribute is not present, the VNFM shall create the link ports on the externally-managed VL.\n",
                        "type": "array",
                        "items": {
                          "description": "This type represents an externally provided link port to be used to connect a VNFC connection point  to an exernally managed VL.\n",
                          "type": "object",
                          "required": [
                            "vnfLinkPortId",
                            "resourceHandle"
                          ],
                          "properties": {
                            "vnfLinkPortId": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            },
                            "resourceHandle": {
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "description": "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.\n",
                              "properties": {
                                "vimConnectionId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceProviderId": {
                                  "description": "An identifier with the intention of being globally unique.\n",
                                  "type": "string"
                                },
                                "resourceId": {
                                  "description": "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.\n",
                                  "type": "string"
                                },
                                "vimLevelResourceType": {
                                  "description": "The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the \"type\" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).\n",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "extManagedMultisiteVirtualLinkId": {
                        "description": "An identifier with the intention of being globally unique.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "additionalParams": {
                  "description": "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of keyvalue pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259. In the following example, a list of key-value pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\") is provided to illustrate that the values associated with different keys can be of different type.\n",
                  "type": "object"
                },
                "_links": {
                  "description": "Links to resources related to this resource.\n",
                  "type": "object",
                  "required": [
                    "self",
                    "vnfLcmOpOcc",
                    "vnfInstance"
                  ],
                  "properties": {
                    "self": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfLcmOpOcc": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfInstance": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IndividualGrant.Get.202": {
        "description": "202 ACCEPTED\n\nShall be returned when the process of creating the grant is ongoing, no grant is available yet.\nThe response body shall be empty.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}