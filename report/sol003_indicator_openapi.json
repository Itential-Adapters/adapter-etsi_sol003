{
  "openapi": "3.0.2",
  "info": {
    "title": "SOL003 - VNF Indicator interface",
    "description": "SOL003 - VNF Indicator interface\n\nIMPORTANT: Please note that this file might be not aligned to the current\nversion of the ETSI Group Specification it refers to. In case of\ndiscrepancies the published ETSI Group Specification takes precedence.\n\nPlease report bugs to https://forge.etsi.org/rep/nfv/SOL002-SOL003/issues\n",
    "contact": {
      "name": "NFV-SOL WG"
    },
    "license": {
      "name": "ETSI Forge copyright notice",
      "url": "https://forge.etsi.org/etsi-forge-copyright-notice.txt"
    },
    "version": "1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1"
  },
  "externalDocs": {
    "description": "ETSI GS NFV-SOL 003 V3.3.1",
    "url": "https://www.etsi.org/deliver/etsi_gs/NFV-SOL/001_099/003/03.03.01_60/gs_NFV-SOL003v030301p.pdf"
  },
  "servers": [
    {
      "url": "http://127.0.0.1/vnfind/v1"
    },
    {
      "url": "https://127.0.0.1/vnfind/v1"
    }
  ],
  "paths": {
    "/api_versions": {
      "parameters": [
        {
          "name": "Version",
          "description": "Version of the API requested to use when responding to this request.\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve API version information",
        "description": "The GET method reads API version information. This method shall follow the provisions specified in table 4.6.3.3.3.2-1 for request and response data structures, and response codes. URI query parameters are not supported.\n",
        "responses": {
          "200": {
            "description": "200 OK\nAPI version information was read successfully. The response body shall contain 4.4 API version information, as defined in clause 4.4.1.13.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "Version": {
                "description": "The used API version.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "This type represents API version information.\n",
                  "type": "object",
                  "required": [
                    "uriPrefix",
                    "apiVersions"
                  ],
                  "properties": {
                    "uriPrefix": {
                      "description": "Specifies the URI prefix for the API, in the following form {apiRoot}/{apiName}/{apiMajorVersion}/.\n",
                      "type": "string"
                    },
                    "apiVersions": {
                      "description": "Version(s) supported for the API signaled by the uriPrefix attribute.\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "version"
                        ],
                        "properties": {
                          "version": {
                            "description": "Identifies a supported version. The value of the version attribute shall be a version identifier as specified in clause 9.1 (SOL013).\n",
                            "type": "string"
                          },
                          "isDeprecated": {
                            "description": "If such information is available, this attribute indicates whether use of the version signaled by the version attribute is deprecated (true) or not (false).\nA deprecated version is still supported by the API producer but is recommended not to be used any longer. When a version is no longer supported, it does not appear in the response body.\n",
                            "type": "boolean"
                          },
                          "retirementDate": {
                            "description": "Date-time stamp. Representation: String formatted according to IETF RFC 3339.\n",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "413 PAYLOAD TOO LARGE\nIf the payload body of a request is larger than the amount of data the API producer is willing or able to process, it shall respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for closing the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "414": {
            "description": "414 URI TOO LONG\nIf the request URI of a request is longer than the API producer is willing or able to process, it shall respond with this response code. This condition can e.g. be caused by passing long queries in the request URI of a GET request. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "416": {
            "description": "416 Range Not Satisfiable\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "429 TOO MANY REQUESTS\nIf the API consumer has sent too many requests in a defined period of time and the API producer is able to detect that condition (\"rate limiting\"), the API producer shall respond with this response code, following the provisions in IETF RFC 6585 [17] for the use of the \"Retry-After\" HTTP header. The \"ProblemDetails\" structure shall be provided and shall include in the \"detail\" attribute more information about the source of the problem.\nThe period of time and allowed number of requests are configured within the API producer by means outside the scope of the present document.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/indicators": {
      "get": {
        "description": "Get Indicator Value.\nThe GET method queries multiple VNF indicators.\nThis method shall follow the provisions specified in the tables 8.4.2.3.2-1 and 8.4.2.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nextpage_opaque_marker",
            "description": "Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Version",
            "description": "Version of the API requested to use when responding to this request.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Indicators.Get.200"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/indicators/{vnfInstanceId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VnfInstanceId"
        }
      ],
      "get": {
        "description": "Get Indicator Value.\nThe GET method queries multiple VNF indicators related to a VNF instance.\nThis method shall follow the provisions specified in the tables 8.4.3.3.2-1 and 8.4.3.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "The MIME type of the body of the request. Reference: IETF RFC 7231\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nextpage_opaque_marker",
            "description": "Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Version",
            "description": "Version of the API requested to use when responding to this request.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/VnfInstanceIndicators.Get.200"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/indicators/{vnfInstanceId}/{indicatorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/IndicatorId"
        },
        {
          "$ref": "#/components/parameters/VnfInstanceId"
        }
      ],
      "get": {
        "description": "Get Indicator Value.\nThe GET method reads a VNF indicator.\nThis method shall follow the provisions specified in the tables 8.4.4.3.2-1 and 8.4.4.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "The MIME type of the body of the request. Reference: IETF RFC 7231\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Version",
            "description": "Version of the API requested to use when responding to this request.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/VnfInstanceIndividualIndicator.Get.200"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "parameters": [
        {
          "name": "Accept",
          "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "Content-Type",
          "description": "The MIME type of the body of the request. Reference: IETF RFC 7231\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "Authorization",
          "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
          "in": "header",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "Version",
          "description": "Version of the API requested to use when responding to this request.\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Subscribe.\nThe POST method creates a new subscription.\nAs the result of successfully executing this method, a new \"Individual subscription\" resource\nas defined in clause 8.4.6 shall have been created. This method shall not trigger any notification.\nCreation of two \"Individual subscription\" resources with the same callback URI and the same filter\ncan result in performance degradation and will provide duplicates of notifications to the NFVO,\nand might make sense only in very rare use cases. Consequently, the VNFM may either allow creating\na new \"Individual subscription\" resource if another \"Individual subscription\" resource with the\nsame filter and callback URI already exists (in which case it shall return the \"201 Created\" response code),\nor may decide to not create a duplicate \"Individual subscription\" resource (in which case it shall return\na \"303 See Other\" response code referencing the existing \"Individual subscription\" resource with the same\nfilter and callback URI).\nThis method shall follow the provisions specified in the tables 8.4.5.3.1-1 and 8.4.5.3.1-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/VnfIndicatorSubscriptionRequest"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Subscriptions.Post.201"
          },
          "303": {
            "description": "303 See Other\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            }
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Query Subscription Information.\nThe GET method queries the list of active subscriptions of the functional block that\ninvokes the method. It can be used e.g. for resynchronization after error situations.\nThis method shall follow the provisions specified in the tables 8.4.5.3.2-1 and 8.4.5.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "filter",
            "description": "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nextpage_opaque_marker",
            "description": "Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Subscriptions.Get.200"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/indicators/subscriptions/{subscriptionId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/SubscriptionId"
        },
        {
          "name": "Content-Type",
          "description": "The MIME type of the body of the request. Reference: IETF RFC 7231\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "Authorization",
          "description": "The authorization token for the request. Reference: IETF RFC 7235.\n",
          "in": "header",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "Version",
          "description": "Version of the API requested to use when responding to this request.\n",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Query Subscription Information.\nThe GET method reads an individual subscription.\nThis method shall follow the provisions specified in the tables 8.4.6.3.2-1 and 8.4.6.3.2-2\nfor URI query parameters, request and response data structures, and response codes.\n",
        "parameters": [
          {
            "name": "Accept",
            "description": "Content-Types that are acceptable for the response. Reference: IETF RFC 7231.\n",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IndividualSubscription.Get.200"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Terminate Subscription.\nThe DELETE method terminates an individual subscription.\nThis method shall follow the provisions specified in the tables 8.4.6.3.5-1 and 8.4.6.3.5-2\nfor URI query parameters, request and response data structures, and response codes.\nAs the result of successfully executing this method, the \"Individual subscription\" resource\nshall not exist any longer. This means that no notifications for that subscription shall be\nsent to the formerly-subscribed API consumer.\n\n  NOTE: Due to race conditions, some notifications might still be received by the formerly-subscribed\n        API consumer for a certain time period after the deletion.\n",
        "responses": {
          "204": {
            "$ref": "#/components/responses/IndividualSubscription.Delete.204"
          },
          "400": {
            "description": "400 BAD REQUEST\n400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned.\nIf the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nIf there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\nIf the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\nThe use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 UNAUTHORIZED\nIf the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 FORBIDDEN\nIf the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404 NOT FOUND\nIf the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable.\nThis response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422 UNPROCESSABLE ENTITY\nIf the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem.\nThis error response code is only applicable for methods that have a request body.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500 INTERNAL SERVER ERROR\nIf there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "503 SERVICE UNAVAILABLE\nIf the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code.\n",
            "headers": {
              "Content-Type": {
                "description": "The MIME type of the body of the response.",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              },
              "WWW-Authenticate": {
                "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the corresponding HTTP request has provided an invalid authorization token.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 0
                }
              },
              "Version": {
                "description": "Version of the API used in the response.\n",
                "schema": {
                  "type": "string",
                  "maximum": 1,
                  "minimum": 1
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "The definition of the general \"ProblemDetails\" data structure from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\" attributes are mandated to be included by the present document, to ensure that the response contains additional textual information about an error. IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type. It is possible that particular APIs in the present document, or particular implementations, define extensions to define additional attributes that provide more information about the error. The description column only provides some explanation of the meaning to Facilitate understanding of the design. For a full description, see IETF RFC 7807 [19].\n",
                  "type": "object",
                  "required": [
                    "status",
                    "detail"
                  ],
                  "properties": {
                    "type": {
                      "description": "A URI reference according to IETF RFC 3986 [5] that identifies the problem type. It is encouraged that the URI provides human-readable documentation for the problem (e.g. using HTML) when dereferenced. When this member is not present, its value is assumed to be \"about:blank\".\n",
                      "type": "string",
                      "format": "URI"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization. If type is given and other than \"about:blank\", this attribute shall also be provided. A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code for this occurrence of the problem. The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n",
                      "type": "integer"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.\n",
                      "type": "string"
                    },
                    "instance": {
                      "description": "A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.\n",
                      "type": "string",
                      "format": "URI"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "VnfInstanceId": {
        "name": "vnfInstanceId",
        "in": "path",
        "description": "Identifier of the VNF instance to which the VNF indicator applies.\nThis identifier can be retrieved from the resource referenced by the\n\"Location\" HTTP header in the response to a POST request creating a\nnew \"Individual VNF instance\" resource. It can also be retrieved from the \"id\"\nattribute in the payload body of that response.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "IndicatorId": {
        "name": "indicatorId",
        "in": "path",
        "description": "Identifier of the VNF indicator.\nThis identifier can be retrieved from the resource referenced by the\npayload body in the response to a POST request creating a new \"Individual VNF\ninstance\" resource.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionId": {
        "name": "subscriptionId",
        "in": "path",
        "description": "Identifier of this subscription.\nThis identifier can be retrieved from the resource referenced by the\n\"Location\" HTTP header in the response to a POST request creating a\nnew \"Individual subscription\" resource. It can also be retrieved from the \"id\"\nattribute in the payload body of that response.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "VnfIndicatorSubscriptionRequest": {
        "description": "Details of the subscription to be created.",
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a subscription request related to VNF indicator value change notifications.\n",
              "type": "object",
              "required": [
                "callbackUri"
              ],
              "properties": {
                "filter": {
                  "description": "This type represents a subscription filter for notifications related to VNF indicators. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical \"and\" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical \"or\" between the values of one filter attribute).\n",
                  "type": "object",
                  "properties": {
                    "vnfInstanceSubscriptionFilter": {
                      "description": "This type represents subscription filter criteria to match VNF instances.\n",
                      "type": "object",
                      "anyOf": [
                        {
                          "oneOf": [
                            {
                              "required": [
                                "vnfdId"
                              ]
                            },
                            {
                              "required": [
                                "vnfProductsFromProviders"
                              ]
                            }
                          ]
                        },
                        {
                          "oneOf": [
                            {
                              "required": [
                                "vnfInstanceIds"
                              ]
                            },
                            {
                              "required": [
                                "vnfInstanceNames"
                              ]
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "vnfdIds": {
                          "description": "If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          }
                        },
                        "vnfProductsFromProviders": {
                          "description": "If present, match VNF instances that belong to VNF products from certain providers. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "vnfProvider"
                            ],
                            "properties": {
                              "vnfProvider": {
                                "description": "Name of the VNF provider to match.\n",
                                "type": "string"
                              },
                              "vnfProducts": {
                                "description": "If present, match VNF instances that belong to VNF products with certain product names, from one particular provider.\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "vnfProductName"
                                  ],
                                  "properties": {
                                    "vnfProductName": {
                                      "description": "Name of the VNF product to match.\n",
                                      "type": "string"
                                    },
                                    "versions": {
                                      "description": "If present, match VNF instances that belong to VNF products with certain versions and a certain product name, from one particular provider.\n",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "vnfSoftwareVersion"
                                        ],
                                        "properties": {
                                          "vnfSoftwareVersion": {
                                            "description": "A version.\n",
                                            "type": "string"
                                          },
                                          "vnfdVersions": {
                                            "description": "If present, match VNF instances that belong to VNF products with certain VNFD versions, a certain software version and a certain product name, from one particular provider.\n",
                                            "type": "array",
                                            "items": {
                                              "description": "A version.\n",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "vnfInstanceIds": {
                          "description": "If present, match VNF instances with an instance identifier listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          }
                        },
                        "vnfInstanceNames": {
                          "description": "If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "notificationTypes": {
                      "description": "Match particular notification types. Permitted values: *\tVnfIndicatorValueChangeNotification *\tSupportedIndicatorsChangeNotification The permitted values of the \"notificationTypes\" attribute are spelled exactly as the names of the notification types to facilitate automated code generation systems.\n",
                      "type": "string",
                      "enum": [
                        "VnfIndicatorValueChangeNotification",
                        "SupportedIndicatorsChangeNotification"
                      ]
                    },
                    "indicatorIds": {
                      "description": "Match particular VNF indicator identifiers.\n",
                      "type": "array",
                      "items": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "callbackUri": {
                  "description": "String formatted according to IETF RFC 3986.\n",
                  "type": "string"
                },
                "authentication": {
                  "type": "object",
                  "required": [
                    "authType"
                  ],
                  "properties": {
                    "authType": {
                      "description": "Defines the types of Authentication / Authorization which the API consumer is willing to accept when receiving a notification. Permitted values: * BASIC: In every HTTP request to the notification endpoint, use\n  HTTP Basic authentication with the client credentials. \n* OAUTH2_CLIENT_CREDENTIALS: In every HTTP request to the\n  notification endpoint, use an OAuth 2.0 Bearer token, obtained\n  using the client credentials grant type.\n* TLS_CERT: Every HTTP request to the notification endpoint is sent\n  over a mutually authenticated TLS session, i.e. not only the\n  server is authenticated, but also the client is authenticated\n  during the TLS tunnel setup.\n",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "BASIC",
                          "OAUTH2_CLIENT_CREDENTIALS",
                          "TLS_CERT"
                        ]
                      }
                    },
                    "paramsBasic": {
                      "description": "Parameters for authentication/authorization using BASIC. Shall be present if authType is \"BASIC\" and the contained information has not been provisioned out of band. Shall be absent otherwise.\n",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "description": "Username to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.\n",
                          "type": "string"
                        },
                        "password": {
                          "description": "Password to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.\n",
                          "type": "string"
                        }
                      }
                    },
                    "paramsOauth2ClientCredentials": {
                      "description": "Parameters for authentication/authorization using OAUTH2_CLIENT_CREDENTIALS. Shall be present if authType is \"OAUTH2_CLIENT_CREDENTIALS\" and the contained information has not been provisioned out of band. Shall be absent otherwise.\n",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "Client identifier to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.\n",
                          "type": "string"
                        },
                        "clientPassword": {
                          "description": "Client password to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.\n",
                          "type": "string"
                        },
                        "tokenEndpoint": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "Indicators.Get.200": {
        "description": "200 OK\n\nShall be returned when information about zero or more VNF indicators has been queried successfully.\nThe response body shall contain in an array the representations of all VNF indicators that match\nthe attribute filter, i.e. zero or more representations of VNF indicators as defined in clause 8.5.2.2.\nIf the \"filter\" URI parameter was supplied in the request, the data in the response body shall have\nbeen transformed according to the rules specified in clause 5.2.2 of ETSI GS NFV-SOL 013.\nIf the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this resource, inclusion of the Link HTTP header in this response shall follow the provisions\nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Link": {
            "description": "Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "description": "This type represents a VNF indicator value.\n",
                "type": "object",
                "required": [
                  "id",
                  "value",
                  "vnfInstanceId",
                  "_links"
                ],
                "properties": {
                  "id": {
                    "description": "An identifier that is unique within a VNF descriptor.\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Human readable name of the indicator. Shall be present if defined in the VNFD.\n",
                    "type": "string"
                  },
                  "value": {
                    "description": "Provides the value of the indicator. The value format is defined in the VNFD. ETSI GS NFV-SOL 001 specifies the structure and format of the  VNFD based on TOSCA specifications.\n",
                    "type": "object"
                  },
                  "vnfInstanceId": {
                    "description": "An identifier with the intention of being globally unique.\n",
                    "type": "string"
                  },
                  "_links": {
                    "description": "Links for this resource.\n",
                    "type": "object",
                    "required": [
                      "self",
                      "vnfInstance"
                    ],
                    "properties": {
                      "self": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      },
                      "vnfInstance": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "VnfInstanceIndicators.Get.200": {
        "description": "200 OK\n\nShall be returned when information about zero or more VNF indicators has been queried successfully.\nThe response body shall contain in an array the representations of all VNF indicators that are related\nto the particular VNF instance and that match the attribute filter, i.e. zero or more representations\nof VNF indicators as defined in clause 8.5.2.2.\nIf the \"filter\" URI parameter was supplied in the request, the data in the response body shall have been\ntransformed according to the rules specified in clause 5.2.2 of ETSI GS NFV-SOL 013.\nIf the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this resource, inclusion of the Link HTTP header in this response shall follow the provisions\nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Link": {
            "description": "Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "description": "This type represents a VNF indicator value.\n",
                "type": "object",
                "required": [
                  "id",
                  "value",
                  "vnfInstanceId",
                  "_links"
                ],
                "properties": {
                  "id": {
                    "description": "An identifier that is unique within a VNF descriptor.\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Human readable name of the indicator. Shall be present if defined in the VNFD.\n",
                    "type": "string"
                  },
                  "value": {
                    "description": "Provides the value of the indicator. The value format is defined in the VNFD. ETSI GS NFV-SOL 001 specifies the structure and format of the  VNFD based on TOSCA specifications.\n",
                    "type": "object"
                  },
                  "vnfInstanceId": {
                    "description": "An identifier with the intention of being globally unique.\n",
                    "type": "string"
                  },
                  "_links": {
                    "description": "Links for this resource.\n",
                    "type": "object",
                    "required": [
                      "self",
                      "vnfInstance"
                    ],
                    "properties": {
                      "self": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      },
                      "vnfInstance": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "VnfInstanceIndividualIndicator.Get.200": {
        "description": "200 OK\nShall be returned when the VNF indicator has been read successfully.\nThe response body shall contain the representation of the VNF indicator.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a VNF indicator value.\n",
              "type": "object",
              "required": [
                "id",
                "value",
                "vnfInstanceId",
                "_links"
              ],
              "properties": {
                "id": {
                  "description": "An identifier that is unique within a VNF descriptor.\n",
                  "type": "string"
                },
                "name": {
                  "description": "Human readable name of the indicator. Shall be present if defined in the VNFD.\n",
                  "type": "string"
                },
                "value": {
                  "description": "Provides the value of the indicator. The value format is defined in the VNFD. ETSI GS NFV-SOL 001 specifies the structure and format of the  VNFD based on TOSCA specifications.\n",
                  "type": "object"
                },
                "vnfInstanceId": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "_links": {
                  "description": "Links for this resource.\n",
                  "type": "object",
                  "required": [
                    "self",
                    "vnfInstance"
                  ],
                  "properties": {
                    "self": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    },
                    "vnfInstance": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Subscriptions.Post.201": {
        "description": "201 CREATED\n\nShall be returned when the subscription has been created successfully.\nThe response body shall contain a representation of the created \"Individual subscription\" resource.\nThe HTTP response shall include a \"Location\" HTTP header that points to the created resource.\n",
        "headers": {
          "Location": {
            "description": "The resource URI of the created subscription resource.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "description": "This type represents a subscription related to notifications about VNF indicator value changes.\n",
                "type": "object",
                "required": [
                  "id",
                  "callbackUri",
                  "_links"
                ],
                "properties": {
                  "id": {
                    "description": "An identifier with the intention of being globally unique.\n",
                    "type": "string"
                  },
                  "filter": {
                    "description": "This type represents a subscription filter for notifications related to VNF indicators. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical \"and\" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical \"or\" between the values of one filter attribute).\n",
                    "type": "object",
                    "properties": {
                      "vnfInstanceSubscriptionFilter": {
                        "description": "This type represents subscription filter criteria to match VNF instances.\n",
                        "type": "object",
                        "anyOf": [
                          {
                            "oneOf": [
                              {
                                "required": [
                                  "vnfdId"
                                ]
                              },
                              {
                                "required": [
                                  "vnfProductsFromProviders"
                                ]
                              }
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "required": [
                                  "vnfInstanceIds"
                                ]
                              },
                              {
                                "required": [
                                  "vnfInstanceNames"
                                ]
                              }
                            ]
                          }
                        ],
                        "properties": {
                          "vnfdIds": {
                            "description": "If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          },
                          "vnfProductsFromProviders": {
                            "description": "If present, match VNF instances that belong to VNF products from certain providers. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "vnfProvider"
                              ],
                              "properties": {
                                "vnfProvider": {
                                  "description": "Name of the VNF provider to match.\n",
                                  "type": "string"
                                },
                                "vnfProducts": {
                                  "description": "If present, match VNF instances that belong to VNF products with certain product names, from one particular provider.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "vnfProductName"
                                    ],
                                    "properties": {
                                      "vnfProductName": {
                                        "description": "Name of the VNF product to match.\n",
                                        "type": "string"
                                      },
                                      "versions": {
                                        "description": "If present, match VNF instances that belong to VNF products with certain versions and a certain product name, from one particular provider.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "vnfSoftwareVersion"
                                          ],
                                          "properties": {
                                            "vnfSoftwareVersion": {
                                              "description": "A version.\n",
                                              "type": "string"
                                            },
                                            "vnfdVersions": {
                                              "description": "If present, match VNF instances that belong to VNF products with certain VNFD versions, a certain software version and a certain product name, from one particular provider.\n",
                                              "type": "array",
                                              "items": {
                                                "description": "A version.\n",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "vnfInstanceIds": {
                            "description": "If present, match VNF instances with an instance identifier listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          },
                          "vnfInstanceNames": {
                            "description": "If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "notificationTypes": {
                        "description": "Match particular notification types. Permitted values: *\tVnfIndicatorValueChangeNotification *\tSupportedIndicatorsChangeNotification The permitted values of the \"notificationTypes\" attribute are spelled exactly as the names of the notification types to facilitate automated code generation systems.\n",
                        "type": "string",
                        "enum": [
                          "VnfIndicatorValueChangeNotification",
                          "SupportedIndicatorsChangeNotification"
                        ]
                      },
                      "indicatorIds": {
                        "description": "Match particular VNF indicator identifiers.\n",
                        "type": "array",
                        "items": {
                          "description": "An identifier that is unique within a VNF descriptor.\n",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "callbackUri": {
                    "description": "The URI of the endpoint to send the notification to.\n",
                    "type": "string",
                    "format": "url"
                  },
                  "_links": {
                    "description": "Links for this resource.\n",
                    "type": "object",
                    "required": [
                      "self"
                    ],
                    "properties": {
                      "self": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Subscriptions.Get.200": {
        "description": "200 OK\n\nShall be returned when the list of subscriptions has been queried successfully.\nThe response body shall contain in an array the representations of all active\nsubscriptions of the functional block that invokes the method which match the attribute filter,\ni.e. zero or more representations of VNF indicator subscriptions as defined in clause 8.5.2.4.\nIf the \"filter\" URI parameter was supplied in the request, the data in the response body shall\nhave been transformed according to the rules specified in clause 5.2.2 of ETSI GS NFV-SOL 013.\nIf the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this resource, inclusion of the Link HTTP header in this response shall follow the provisions\nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n",
        "headers": {
          "Location": {
            "description": "The resource URI of the created subscription resource.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Link": {
            "description": "Reference to other resources. Used for paging in the present document, see clause 4.7.2.1.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "description": "This type represents a subscription related to notifications about VNF indicator value changes.\n",
                "type": "object",
                "required": [
                  "id",
                  "callbackUri",
                  "_links"
                ],
                "properties": {
                  "id": {
                    "description": "An identifier with the intention of being globally unique.\n",
                    "type": "string"
                  },
                  "filter": {
                    "description": "This type represents a subscription filter for notifications related to VNF indicators. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical \"and\" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical \"or\" between the values of one filter attribute).\n",
                    "type": "object",
                    "properties": {
                      "vnfInstanceSubscriptionFilter": {
                        "description": "This type represents subscription filter criteria to match VNF instances.\n",
                        "type": "object",
                        "anyOf": [
                          {
                            "oneOf": [
                              {
                                "required": [
                                  "vnfdId"
                                ]
                              },
                              {
                                "required": [
                                  "vnfProductsFromProviders"
                                ]
                              }
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "required": [
                                  "vnfInstanceIds"
                                ]
                              },
                              {
                                "required": [
                                  "vnfInstanceNames"
                                ]
                              }
                            ]
                          }
                        ],
                        "properties": {
                          "vnfdIds": {
                            "description": "If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          },
                          "vnfProductsFromProviders": {
                            "description": "If present, match VNF instances that belong to VNF products from certain providers. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "vnfProvider"
                              ],
                              "properties": {
                                "vnfProvider": {
                                  "description": "Name of the VNF provider to match.\n",
                                  "type": "string"
                                },
                                "vnfProducts": {
                                  "description": "If present, match VNF instances that belong to VNF products with certain product names, from one particular provider.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "vnfProductName"
                                    ],
                                    "properties": {
                                      "vnfProductName": {
                                        "description": "Name of the VNF product to match.\n",
                                        "type": "string"
                                      },
                                      "versions": {
                                        "description": "If present, match VNF instances that belong to VNF products with certain versions and a certain product name, from one particular provider.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "vnfSoftwareVersion"
                                          ],
                                          "properties": {
                                            "vnfSoftwareVersion": {
                                              "description": "A version.\n",
                                              "type": "string"
                                            },
                                            "vnfdVersions": {
                                              "description": "If present, match VNF instances that belong to VNF products with certain VNFD versions, a certain software version and a certain product name, from one particular provider.\n",
                                              "type": "array",
                                              "items": {
                                                "description": "A version.\n",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "vnfInstanceIds": {
                            "description": "If present, match VNF instances with an instance identifier listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "description": "An identifier with the intention of being globally unique.\n",
                              "type": "string"
                            }
                          },
                          "vnfInstanceNames": {
                            "description": "If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "notificationTypes": {
                        "description": "Match particular notification types. Permitted values: *\tVnfIndicatorValueChangeNotification *\tSupportedIndicatorsChangeNotification The permitted values of the \"notificationTypes\" attribute are spelled exactly as the names of the notification types to facilitate automated code generation systems.\n",
                        "type": "string",
                        "enum": [
                          "VnfIndicatorValueChangeNotification",
                          "SupportedIndicatorsChangeNotification"
                        ]
                      },
                      "indicatorIds": {
                        "description": "Match particular VNF indicator identifiers.\n",
                        "type": "array",
                        "items": {
                          "description": "An identifier that is unique within a VNF descriptor.\n",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "callbackUri": {
                    "description": "The URI of the endpoint to send the notification to.\n",
                    "type": "string",
                    "format": "url"
                  },
                  "_links": {
                    "description": "Links for this resource.\n",
                    "type": "object",
                    "required": [
                      "self"
                    ],
                    "properties": {
                      "self": {
                        "description": "This type represents a link to a resource using an absolute URI.\n",
                        "type": "object",
                        "required": [
                          "href"
                        ],
                        "properties": {
                          "href": {
                            "description": "String formatted according to IETF RFC 3986.\n",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IndividualSubscription.Get.200": {
        "description": "200 OK\n\nShall be returned when information about an individual subscription has been read successfully.\nThe response body shall contain a representation of the \"Individual subscription\" resource.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "description": "This type represents a subscription related to notifications about VNF indicator value changes.\n",
              "type": "object",
              "required": [
                "id",
                "callbackUri",
                "_links"
              ],
              "properties": {
                "id": {
                  "description": "An identifier with the intention of being globally unique.\n",
                  "type": "string"
                },
                "filter": {
                  "description": "This type represents a subscription filter for notifications related to VNF indicators. At a particular nesting level in the filter structure, the following applies: All attributes shall match in order for the filter to match (logical \"and\" between different filter attributes). If an attribute is an array, the attribute shall match if at least one of the values in the array matches (logical \"or\" between the values of one filter attribute).\n",
                  "type": "object",
                  "properties": {
                    "vnfInstanceSubscriptionFilter": {
                      "description": "This type represents subscription filter criteria to match VNF instances.\n",
                      "type": "object",
                      "anyOf": [
                        {
                          "oneOf": [
                            {
                              "required": [
                                "vnfdId"
                              ]
                            },
                            {
                              "required": [
                                "vnfProductsFromProviders"
                              ]
                            }
                          ]
                        },
                        {
                          "oneOf": [
                            {
                              "required": [
                                "vnfInstanceIds"
                              ]
                            },
                            {
                              "required": [
                                "vnfInstanceNames"
                              ]
                            }
                          ]
                        }
                      ],
                      "properties": {
                        "vnfdIds": {
                          "description": "If present, match VNF instances that were created based on a VNFD identified by one of the vnfdId values listed in this attribute. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          }
                        },
                        "vnfProductsFromProviders": {
                          "description": "If present, match VNF instances that belong to VNF products from certain providers. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives to reference to VNF instances that are based on certain VNFDs in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "vnfProvider"
                            ],
                            "properties": {
                              "vnfProvider": {
                                "description": "Name of the VNF provider to match.\n",
                                "type": "string"
                              },
                              "vnfProducts": {
                                "description": "If present, match VNF instances that belong to VNF products with certain product names, from one particular provider.\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "vnfProductName"
                                  ],
                                  "properties": {
                                    "vnfProductName": {
                                      "description": "Name of the VNF product to match.\n",
                                      "type": "string"
                                    },
                                    "versions": {
                                      "description": "If present, match VNF instances that belong to VNF products with certain versions and a certain product name, from one particular provider.\n",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "vnfSoftwareVersion"
                                        ],
                                        "properties": {
                                          "vnfSoftwareVersion": {
                                            "description": "A version.\n",
                                            "type": "string"
                                          },
                                          "vnfdVersions": {
                                            "description": "If present, match VNF instances that belong to VNF products with certain VNFD versions, a certain software version and a certain product name, from one particular provider.\n",
                                            "type": "array",
                                            "items": {
                                              "description": "A version.\n",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "vnfInstanceIds": {
                          "description": "If present, match VNF instances with an instance identifier listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "description": "An identifier with the intention of being globally unique.\n",
                            "type": "string"
                          }
                        },
                        "vnfInstanceNames": {
                          "description": "If present, match VNF instances with a VNF Instance Name listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\" are alternatives to reference to particular VNF Instances in a filter. They should not be used both in the same filter instance, but one alternative should be chosen.\n",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "notificationTypes": {
                      "description": "Match particular notification types. Permitted values: *\tVnfIndicatorValueChangeNotification *\tSupportedIndicatorsChangeNotification The permitted values of the \"notificationTypes\" attribute are spelled exactly as the names of the notification types to facilitate automated code generation systems.\n",
                      "type": "string",
                      "enum": [
                        "VnfIndicatorValueChangeNotification",
                        "SupportedIndicatorsChangeNotification"
                      ]
                    },
                    "indicatorIds": {
                      "description": "Match particular VNF indicator identifiers.\n",
                      "type": "array",
                      "items": {
                        "description": "An identifier that is unique within a VNF descriptor.\n",
                        "type": "string"
                      }
                    }
                  }
                },
                "callbackUri": {
                  "description": "The URI of the endpoint to send the notification to.\n",
                  "type": "string",
                  "format": "url"
                },
                "_links": {
                  "description": "Links for this resource.\n",
                  "type": "object",
                  "required": [
                    "self"
                  ],
                  "properties": {
                    "self": {
                      "description": "This type represents a link to a resource using an absolute URI.\n",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "String formatted according to IETF RFC 3986.\n",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IndividualSubscription.Delete.204": {
        "description": "204 NO CONTENT\n\nShall be returned when the \"Individual subscription\" resource has been deleted successfully.\nThe response body shall be empty.\n",
        "headers": {
          "WWW-Authenticate": {
            "description": "Challenge if the corresponding HTTP request has not provided authorization, or error details if the\ncorresponding HTTP request has provided an invalid authorization token.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "Version": {
            "description": "The used API version.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}